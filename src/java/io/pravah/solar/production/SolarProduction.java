// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: solar-production.proto

package io.pravah.solar.production;

public final class SolarProduction {
	private SolarProduction() {}
	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistryLite registry) {
	}

	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistry registry) {
		registerAllExtensions(
				(com.google.protobuf.ExtensionRegistryLite) registry);
	}
	public interface FeedMessageOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.FeedMessage)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		boolean hasHeader();
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.FeedHeader getHeader();
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder getHeaderOrBuilder();

		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		java.util.List<io.pravah.solar.production.SolarProduction.FeedStation>
		getStationsList();
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.FeedStation getStations(int index);
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		int getStationsCount();
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		java.util.List<? extends io.pravah.solar.production.SolarProduction.FeedStationOrBuilder>
		getStationsOrBuilderList();
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.FeedStationOrBuilder getStationsOrBuilder(
				int index);
	}
	/**
	 * Protobuf type {@code solar_production.FeedMessage}
	 */
	public  static final class FeedMessage extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.FeedMessage)
			FeedMessageOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use FeedMessage.newBuilder() to construct.
		private FeedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private FeedMessage() {
			stations_ = java.util.Collections.emptyList();
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private FeedMessage(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							io.pravah.solar.production.SolarProduction.FeedHeader.Builder subBuilder = null;
							if (header_ != null) {
								subBuilder = header_.toBuilder();
							}
							header_ = input.readMessage(io.pravah.solar.production.SolarProduction.FeedHeader.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(header_);
								header_ = subBuilder.buildPartial();
							}

							break;
						}
						case 18: {
							if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
								stations_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.FeedStation>();
								mutable_bitField0_ |= 0x00000002;
							}
							stations_.add(
									input.readMessage(io.pravah.solar.production.SolarProduction.FeedStation.parser(), extensionRegistry));
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
					stations_ = java.util.Collections.unmodifiableList(stations_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedMessage_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedMessage_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.FeedMessage.class, io.pravah.solar.production.SolarProduction.FeedMessage.Builder.class);
		}

		private int bitField0_;
		public static final int HEADER_FIELD_NUMBER = 1;
		private io.pravah.solar.production.SolarProduction.FeedHeader header_;
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		public boolean hasHeader() {
			return header_ != null;
		}
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.FeedHeader getHeader() {
			return header_ == null ? io.pravah.solar.production.SolarProduction.FeedHeader.getDefaultInstance() : header_;
		}
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.FeedHeader header = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder getHeaderOrBuilder() {
			return getHeader();
		}

		public static final int STATIONS_FIELD_NUMBER = 2;
		private java.util.List<io.pravah.solar.production.SolarProduction.FeedStation> stations_;
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		public java.util.List<io.pravah.solar.production.SolarProduction.FeedStation> getStationsList() {
			return stations_;
		}
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		public java.util.List<? extends io.pravah.solar.production.SolarProduction.FeedStationOrBuilder>
		getStationsOrBuilderList() {
			return stations_;
		}
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		public int getStationsCount() {
			return stations_.size();
		}
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.FeedStation getStations(int index) {
			return stations_.get(index);
		}
		/**
		 * <pre>
		 * A solar power station is a collection of one or more inverters
		 * where each inverter is connected to one or more solar panels.
		 * </pre>
		 *
		 * <code>repeated .solar_production.FeedStation stations = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.FeedStationOrBuilder getStationsOrBuilder(
				int index) {
			return stations_.get(index);
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (header_ != null) {
				output.writeMessage(1, getHeader());
			}
			for (int i = 0; i < stations_.size(); i++) {
				output.writeMessage(2, stations_.get(i));
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (header_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(1, getHeader());
			}
			for (int i = 0; i < stations_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(2, stations_.get(i));
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.FeedMessage)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.FeedMessage other = (io.pravah.solar.production.SolarProduction.FeedMessage) obj;

			boolean result = true;
			result = result && (hasHeader() == other.hasHeader());
			if (hasHeader()) {
				result = result && getHeader()
						.equals(other.getHeader());
			}
			result = result && getStationsList()
					.equals(other.getStationsList());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasHeader()) {
				hash = (37 * hash) + HEADER_FIELD_NUMBER;
				hash = (53 * hash) + getHeader().hashCode();
			}
			if (getStationsCount() > 0) {
				hash = (37 * hash) + STATIONS_FIELD_NUMBER;
				hash = (53 * hash) + getStationsList().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedMessage parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.FeedMessage prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.FeedMessage}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.FeedMessage)
				io.pravah.solar.production.SolarProduction.FeedMessageOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedMessage_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedMessage_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.FeedMessage.class, io.pravah.solar.production.SolarProduction.FeedMessage.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.FeedMessage.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
					getStationsFieldBuilder();
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				if (headerBuilder_ == null) {
					header_ = null;
				} else {
					header_ = null;
					headerBuilder_ = null;
				}
				if (stationsBuilder_ == null) {
					stations_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000002);
				} else {
					stationsBuilder_.clear();
				}
				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedMessage_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedMessage getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.FeedMessage.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedMessage build() {
				io.pravah.solar.production.SolarProduction.FeedMessage result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedMessage buildPartial() {
				io.pravah.solar.production.SolarProduction.FeedMessage result = new io.pravah.solar.production.SolarProduction.FeedMessage(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (headerBuilder_ == null) {
					result.header_ = header_;
				} else {
					result.header_ = headerBuilder_.build();
				}
				if (stationsBuilder_ == null) {
					if (((bitField0_ & 0x00000002) == 0x00000002)) {
						stations_ = java.util.Collections.unmodifiableList(stations_);
						bitField0_ = (bitField0_ & ~0x00000002);
					}
					result.stations_ = stations_;
				} else {
					result.stations_ = stationsBuilder_.build();
				}
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.FeedMessage) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.FeedMessage)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.FeedMessage other) {
				if (other == io.pravah.solar.production.SolarProduction.FeedMessage.getDefaultInstance()) return this;
				if (other.hasHeader()) {
					mergeHeader(other.getHeader());
				}
				if (stationsBuilder_ == null) {
					if (!other.stations_.isEmpty()) {
						if (stations_.isEmpty()) {
							stations_ = other.stations_;
							bitField0_ = (bitField0_ & ~0x00000002);
						} else {
							ensureStationsIsMutable();
							stations_.addAll(other.stations_);
						}
						onChanged();
					}
				} else {
					if (!other.stations_.isEmpty()) {
						if (stationsBuilder_.isEmpty()) {
							stationsBuilder_.dispose();
							stationsBuilder_ = null;
							stations_ = other.stations_;
							bitField0_ = (bitField0_ & ~0x00000002);
							stationsBuilder_ =
									com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
											getStationsFieldBuilder() : null;
						} else {
							stationsBuilder_.addAllMessages(other.stations_);
						}
					}
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.FeedMessage parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.FeedMessage) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}
			private int bitField0_;

			private io.pravah.solar.production.SolarProduction.FeedHeader header_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.FeedHeader, io.pravah.solar.production.SolarProduction.FeedHeader.Builder, io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder> headerBuilder_;
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public boolean hasHeader() {
				return headerBuilder_ != null || header_ != null;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedHeader getHeader() {
				if (headerBuilder_ == null) {
					return header_ == null ? io.pravah.solar.production.SolarProduction.FeedHeader.getDefaultInstance() : header_;
				} else {
					return headerBuilder_.getMessage();
				}
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public Builder setHeader(io.pravah.solar.production.SolarProduction.FeedHeader value) {
				if (headerBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					header_ = value;
					onChanged();
				} else {
					headerBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public Builder setHeader(
					io.pravah.solar.production.SolarProduction.FeedHeader.Builder builderForValue) {
				if (headerBuilder_ == null) {
					header_ = builderForValue.build();
					onChanged();
				} else {
					headerBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public Builder mergeHeader(io.pravah.solar.production.SolarProduction.FeedHeader value) {
				if (headerBuilder_ == null) {
					if (header_ != null) {
						header_ =
								io.pravah.solar.production.SolarProduction.FeedHeader.newBuilder(header_).mergeFrom(value).buildPartial();
					} else {
						header_ = value;
					}
					onChanged();
				} else {
					headerBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public Builder clearHeader() {
				if (headerBuilder_ == null) {
					header_ = null;
					onChanged();
				} else {
					header_ = null;
					headerBuilder_ = null;
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedHeader.Builder getHeaderBuilder() {

				onChanged();
				return getHeaderFieldBuilder().getBuilder();
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder getHeaderOrBuilder() {
				if (headerBuilder_ != null) {
					return headerBuilder_.getMessageOrBuilder();
				} else {
					return header_ == null ?
							io.pravah.solar.production.SolarProduction.FeedHeader.getDefaultInstance() : header_;
				}
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.FeedHeader header = 1;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.FeedHeader, io.pravah.solar.production.SolarProduction.FeedHeader.Builder, io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder>
			getHeaderFieldBuilder() {
				if (headerBuilder_ == null) {
					headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.FeedHeader, io.pravah.solar.production.SolarProduction.FeedHeader.Builder, io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder>(
							getHeader(),
							getParentForChildren(),
							isClean());
					header_ = null;
				}
				return headerBuilder_;
			}

			private java.util.List<io.pravah.solar.production.SolarProduction.FeedStation> stations_ =
					java.util.Collections.emptyList();
			private void ensureStationsIsMutable() {
				if (!((bitField0_ & 0x00000002) == 0x00000002)) {
					stations_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.FeedStation>(stations_);
					bitField0_ |= 0x00000002;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.FeedStation, io.pravah.solar.production.SolarProduction.FeedStation.Builder, io.pravah.solar.production.SolarProduction.FeedStationOrBuilder> stationsBuilder_;

			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.FeedStation> getStationsList() {
				if (stationsBuilder_ == null) {
					return java.util.Collections.unmodifiableList(stations_);
				} else {
					return stationsBuilder_.getMessageList();
				}
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public int getStationsCount() {
				if (stationsBuilder_ == null) {
					return stations_.size();
				} else {
					return stationsBuilder_.getCount();
				}
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedStation getStations(int index) {
				if (stationsBuilder_ == null) {
					return stations_.get(index);
				} else {
					return stationsBuilder_.getMessage(index);
				}
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder setStations(
					int index, io.pravah.solar.production.SolarProduction.FeedStation value) {
				if (stationsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureStationsIsMutable();
					stations_.set(index, value);
					onChanged();
				} else {
					stationsBuilder_.setMessage(index, value);
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder setStations(
					int index, io.pravah.solar.production.SolarProduction.FeedStation.Builder builderForValue) {
				if (stationsBuilder_ == null) {
					ensureStationsIsMutable();
					stations_.set(index, builderForValue.build());
					onChanged();
				} else {
					stationsBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder addStations(io.pravah.solar.production.SolarProduction.FeedStation value) {
				if (stationsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureStationsIsMutable();
					stations_.add(value);
					onChanged();
				} else {
					stationsBuilder_.addMessage(value);
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder addStations(
					int index, io.pravah.solar.production.SolarProduction.FeedStation value) {
				if (stationsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureStationsIsMutable();
					stations_.add(index, value);
					onChanged();
				} else {
					stationsBuilder_.addMessage(index, value);
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder addStations(
					io.pravah.solar.production.SolarProduction.FeedStation.Builder builderForValue) {
				if (stationsBuilder_ == null) {
					ensureStationsIsMutable();
					stations_.add(builderForValue.build());
					onChanged();
				} else {
					stationsBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder addStations(
					int index, io.pravah.solar.production.SolarProduction.FeedStation.Builder builderForValue) {
				if (stationsBuilder_ == null) {
					ensureStationsIsMutable();
					stations_.add(index, builderForValue.build());
					onChanged();
				} else {
					stationsBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder addAllStations(
					java.lang.Iterable<? extends io.pravah.solar.production.SolarProduction.FeedStation> values) {
				if (stationsBuilder_ == null) {
					ensureStationsIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, stations_);
					onChanged();
				} else {
					stationsBuilder_.addAllMessages(values);
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder clearStations() {
				if (stationsBuilder_ == null) {
					stations_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000002);
					onChanged();
				} else {
					stationsBuilder_.clear();
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public Builder removeStations(int index) {
				if (stationsBuilder_ == null) {
					ensureStationsIsMutable();
					stations_.remove(index);
					onChanged();
				} else {
					stationsBuilder_.remove(index);
				}
				return this;
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedStation.Builder getStationsBuilder(
					int index) {
				return getStationsFieldBuilder().getBuilder(index);
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedStationOrBuilder getStationsOrBuilder(
					int index) {
				if (stationsBuilder_ == null) {
					return stations_.get(index);  } else {
					return stationsBuilder_.getMessageOrBuilder(index);
				}
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public java.util.List<? extends io.pravah.solar.production.SolarProduction.FeedStationOrBuilder>
			getStationsOrBuilderList() {
				if (stationsBuilder_ != null) {
					return stationsBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(stations_);
				}
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedStation.Builder addStationsBuilder() {
				return getStationsFieldBuilder().addBuilder(
						io.pravah.solar.production.SolarProduction.FeedStation.getDefaultInstance());
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedStation.Builder addStationsBuilder(
					int index) {
				return getStationsFieldBuilder().addBuilder(
						index, io.pravah.solar.production.SolarProduction.FeedStation.getDefaultInstance());
			}
			/**
			 * <pre>
			 * A solar power station is a collection of one or more inverters
			 * where each inverter is connected to one or more solar panels.
			 * </pre>
			 *
			 * <code>repeated .solar_production.FeedStation stations = 2;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.FeedStation.Builder>
			getStationsBuilderList() {
				return getStationsFieldBuilder().getBuilderList();
			}
			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.FeedStation, io.pravah.solar.production.SolarProduction.FeedStation.Builder, io.pravah.solar.production.SolarProduction.FeedStationOrBuilder>
			getStationsFieldBuilder() {
				if (stationsBuilder_ == null) {
					stationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.FeedStation, io.pravah.solar.production.SolarProduction.FeedStation.Builder, io.pravah.solar.production.SolarProduction.FeedStationOrBuilder>(
							stations_,
							((bitField0_ & 0x00000002) == 0x00000002),
							getParentForChildren(),
							isClean());
					stations_ = null;
				}
				return stationsBuilder_;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.FeedMessage)
		}

		// @@protoc_insertion_point(class_scope:solar_production.FeedMessage)
		private static final io.pravah.solar.production.SolarProduction.FeedMessage DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.FeedMessage();
		}

		public static io.pravah.solar.production.SolarProduction.FeedMessage getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<FeedMessage>
				PARSER = new com.google.protobuf.AbstractParser<FeedMessage>() {
			@java.lang.Override
			public FeedMessage parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new FeedMessage(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<FeedMessage> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<FeedMessage> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.FeedMessage getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface FeedHeaderOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.FeedHeader)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Version of the feed specification.
		 * The current version is 0.0.1
		 * </pre>
		 *
		 * <code>string version = 1;</code>
		 */
		java.lang.String getVersion();
		/**
		 * <pre>
		 * Version of the feed specification.
		 * The current version is 0.0.1
		 * </pre>
		 *
		 * <code>string version = 1;</code>
		 */
		com.google.protobuf.ByteString
		getVersionBytes();

		/**
		 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
		 */
		int getIncrementalityValue();
		/**
		 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality getIncrementality();

		/**
		 * <pre>
		 * This timestamp identifies the moment when the content of this feed has been
		 * created (time at the server). In POSIX time (i.e., number of seconds since
		 * January 1st 1970 00:00:00 UTC).
		 * </pre>
		 *
		 * <code>uint64 timestamp = 3;</code>
		 */
		long getTimestamp();
	}
	/**
	 * Protobuf type {@code solar_production.FeedHeader}
	 */
	public  static final class FeedHeader extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.FeedHeader)
			FeedHeaderOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use FeedHeader.newBuilder() to construct.
		private FeedHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private FeedHeader() {
			version_ = "";
			incrementality_ = 0;
			timestamp_ = 0L;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private FeedHeader(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							java.lang.String s = input.readStringRequireUtf8();

							version_ = s;
							break;
						}
						case 16: {
							int rawValue = input.readEnum();

							incrementality_ = rawValue;
							break;
						}
						case 24: {

							timestamp_ = input.readUInt64();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedHeader_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedHeader_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.FeedHeader.class, io.pravah.solar.production.SolarProduction.FeedHeader.Builder.class);
		}

		/**
		 * <pre>
		 * Determines whether the current fetch is incremental.
		 * </pre>
		 *
		 * Protobuf enum {@code solar_production.FeedHeader.Incrementality}
		 */
		public enum Incrementality
				implements com.google.protobuf.ProtocolMessageEnum {
			/**
			 * <code>FULL_DATASET = 0;</code>
			 */
			FULL_DATASET(0),
			/**
			 * <code>DIFFERENTIAL = 1;</code>
			 */
			DIFFERENTIAL(1),
			UNRECOGNIZED(-1),
			;

			/**
			 * <code>FULL_DATASET = 0;</code>
			 */
			public static final int FULL_DATASET_VALUE = 0;
			/**
			 * <code>DIFFERENTIAL = 1;</code>
			 */
			public static final int DIFFERENTIAL_VALUE = 1;


			public final int getNumber() {
				if (this == UNRECOGNIZED) {
					throw new java.lang.IllegalArgumentException(
							"Can't get the number of an unknown enum value.");
				}
				return value;
			}

			/**
			 * @deprecated Use {@link #forNumber(int)} instead.
			 */
			@java.lang.Deprecated
			public static Incrementality valueOf(int value) {
				return forNumber(value);
			}

			public static Incrementality forNumber(int value) {
				switch (value) {
					case 0: return FULL_DATASET;
					case 1: return DIFFERENTIAL;
					default: return null;
				}
			}

			public static com.google.protobuf.Internal.EnumLiteMap<Incrementality>
			internalGetValueMap() {
				return internalValueMap;
			}
			private static final com.google.protobuf.Internal.EnumLiteMap<
					Incrementality> internalValueMap =
					new com.google.protobuf.Internal.EnumLiteMap<Incrementality>() {
						public Incrementality findValueByNumber(int number) {
							return Incrementality.forNumber(number);
						}
					};

			public final com.google.protobuf.Descriptors.EnumValueDescriptor
			getValueDescriptor() {
				return getDescriptor().getValues().get(ordinal());
			}
			public final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptorForType() {
				return getDescriptor();
			}
			public static final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.FeedHeader.getDescriptor().getEnumTypes().get(0);
			}

			private static final Incrementality[] VALUES = values();

			public static Incrementality valueOf(
					com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
				if (desc.getType() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException(
							"EnumValueDescriptor is not for this type.");
				}
				if (desc.getIndex() == -1) {
					return UNRECOGNIZED;
				}
				return VALUES[desc.getIndex()];
			}

			private final int value;

			private Incrementality(int value) {
				this.value = value;
			}

			// @@protoc_insertion_point(enum_scope:solar_production.FeedHeader.Incrementality)
		}

		public static final int VERSION_FIELD_NUMBER = 1;
		private volatile java.lang.Object version_;
		/**
		 * <pre>
		 * Version of the feed specification.
		 * The current version is 0.0.1
		 * </pre>
		 *
		 * <code>string version = 1;</code>
		 */
		public java.lang.String getVersion() {
			java.lang.Object ref = version_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				version_ = s;
				return s;
			}
		}
		/**
		 * <pre>
		 * Version of the feed specification.
		 * The current version is 0.0.1
		 * </pre>
		 *
		 * <code>string version = 1;</code>
		 */
		public com.google.protobuf.ByteString
		getVersionBytes() {
			java.lang.Object ref = version_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				version_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int INCREMENTALITY_FIELD_NUMBER = 2;
		private int incrementality_;
		/**
		 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
		 */
		public int getIncrementalityValue() {
			return incrementality_;
		}
		/**
		 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality getIncrementality() {
			@SuppressWarnings("deprecation")
			io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality result = io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.valueOf(incrementality_);
			return result == null ? io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.UNRECOGNIZED : result;
		}

		public static final int TIMESTAMP_FIELD_NUMBER = 3;
		private long timestamp_;
		/**
		 * <pre>
		 * This timestamp identifies the moment when the content of this feed has been
		 * created (time at the server). In POSIX time (i.e., number of seconds since
		 * January 1st 1970 00:00:00 UTC).
		 * </pre>
		 *
		 * <code>uint64 timestamp = 3;</code>
		 */
		public long getTimestamp() {
			return timestamp_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (!getVersionBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
			}
			if (incrementality_ != io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.FULL_DATASET.getNumber()) {
				output.writeEnum(2, incrementality_);
			}
			if (timestamp_ != 0L) {
				output.writeUInt64(3, timestamp_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (!getVersionBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
			}
			if (incrementality_ != io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.FULL_DATASET.getNumber()) {
				size += com.google.protobuf.CodedOutputStream
						.computeEnumSize(2, incrementality_);
			}
			if (timestamp_ != 0L) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(3, timestamp_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.FeedHeader)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.FeedHeader other = (io.pravah.solar.production.SolarProduction.FeedHeader) obj;

			boolean result = true;
			result = result && getVersion()
					.equals(other.getVersion());
			result = result && incrementality_ == other.incrementality_;
			result = result && (getTimestamp()
					== other.getTimestamp());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + VERSION_FIELD_NUMBER;
			hash = (53 * hash) + getVersion().hashCode();
			hash = (37 * hash) + INCREMENTALITY_FIELD_NUMBER;
			hash = (53 * hash) + incrementality_;
			hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					getTimestamp());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedHeader parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.FeedHeader prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.FeedHeader}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.FeedHeader)
				io.pravah.solar.production.SolarProduction.FeedHeaderOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedHeader_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedHeader_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.FeedHeader.class, io.pravah.solar.production.SolarProduction.FeedHeader.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.FeedHeader.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				version_ = "";

				incrementality_ = 0;

				timestamp_ = 0L;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedHeader_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedHeader getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.FeedHeader.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedHeader build() {
				io.pravah.solar.production.SolarProduction.FeedHeader result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedHeader buildPartial() {
				io.pravah.solar.production.SolarProduction.FeedHeader result = new io.pravah.solar.production.SolarProduction.FeedHeader(this);
				result.version_ = version_;
				result.incrementality_ = incrementality_;
				result.timestamp_ = timestamp_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.FeedHeader) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.FeedHeader)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.FeedHeader other) {
				if (other == io.pravah.solar.production.SolarProduction.FeedHeader.getDefaultInstance()) return this;
				if (!other.getVersion().isEmpty()) {
					version_ = other.version_;
					onChanged();
				}
				if (other.incrementality_ != 0) {
					setIncrementalityValue(other.getIncrementalityValue());
				}
				if (other.getTimestamp() != 0L) {
					setTimestamp(other.getTimestamp());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.FeedHeader parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.FeedHeader) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private java.lang.Object version_ = "";
			/**
			 * <pre>
			 * Version of the feed specification.
			 * The current version is 0.0.1
			 * </pre>
			 *
			 * <code>string version = 1;</code>
			 */
			public java.lang.String getVersion() {
				java.lang.Object ref = version_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					version_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <pre>
			 * Version of the feed specification.
			 * The current version is 0.0.1
			 * </pre>
			 *
			 * <code>string version = 1;</code>
			 */
			public com.google.protobuf.ByteString
			getVersionBytes() {
				java.lang.Object ref = version_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					version_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <pre>
			 * Version of the feed specification.
			 * The current version is 0.0.1
			 * </pre>
			 *
			 * <code>string version = 1;</code>
			 */
			public Builder setVersion(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				version_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Version of the feed specification.
			 * The current version is 0.0.1
			 * </pre>
			 *
			 * <code>string version = 1;</code>
			 */
			public Builder clearVersion() {

				version_ = getDefaultInstance().getVersion();
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Version of the feed specification.
			 * The current version is 0.0.1
			 * </pre>
			 *
			 * <code>string version = 1;</code>
			 */
			public Builder setVersionBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				version_ = value;
				onChanged();
				return this;
			}

			private int incrementality_ = 0;
			/**
			 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
			 */
			public int getIncrementalityValue() {
				return incrementality_;
			}
			/**
			 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
			 */
			public Builder setIncrementalityValue(int value) {
				incrementality_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality getIncrementality() {
				@SuppressWarnings("deprecation")
				io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality result = io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.valueOf(incrementality_);
				return result == null ? io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality.UNRECOGNIZED : result;
			}
			/**
			 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
			 */
			public Builder setIncrementality(io.pravah.solar.production.SolarProduction.FeedHeader.Incrementality value) {
				if (value == null) {
					throw new NullPointerException();
				}

				incrementality_ = value.getNumber();
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.FeedHeader.Incrementality incrementality = 2;</code>
			 */
			public Builder clearIncrementality() {

				incrementality_ = 0;
				onChanged();
				return this;
			}

			private long timestamp_ ;
			/**
			 * <pre>
			 * This timestamp identifies the moment when the content of this feed has been
			 * created (time at the server). In POSIX time (i.e., number of seconds since
			 * January 1st 1970 00:00:00 UTC).
			 * </pre>
			 *
			 * <code>uint64 timestamp = 3;</code>
			 */
			public long getTimestamp() {
				return timestamp_;
			}
			/**
			 * <pre>
			 * This timestamp identifies the moment when the content of this feed has been
			 * created (time at the server). In POSIX time (i.e., number of seconds since
			 * January 1st 1970 00:00:00 UTC).
			 * </pre>
			 *
			 * <code>uint64 timestamp = 3;</code>
			 */
			public Builder setTimestamp(long value) {

				timestamp_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * This timestamp identifies the moment when the content of this feed has been
			 * created (time at the server). In POSIX time (i.e., number of seconds since
			 * January 1st 1970 00:00:00 UTC).
			 * </pre>
			 *
			 * <code>uint64 timestamp = 3;</code>
			 */
			public Builder clearTimestamp() {

				timestamp_ = 0L;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.FeedHeader)
		}

		// @@protoc_insertion_point(class_scope:solar_production.FeedHeader)
		private static final io.pravah.solar.production.SolarProduction.FeedHeader DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.FeedHeader();
		}

		public static io.pravah.solar.production.SolarProduction.FeedHeader getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<FeedHeader>
				PARSER = new com.google.protobuf.AbstractParser<FeedHeader>() {
			@java.lang.Override
			public FeedHeader parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new FeedHeader(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<FeedHeader> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<FeedHeader> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.FeedHeader getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface FeedStationOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.FeedStation)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * id identifies each station uniquely.
		 * </pre>
		 *
		 * <code>string id = 1;</code>
		 */
		java.lang.String getId();
		/**
		 * <pre>
		 * id identifies each station uniquely.
		 * </pre>
		 *
		 * <code>string id = 1;</code>
		 */
		com.google.protobuf.ByteString
		getIdBytes();

		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		boolean hasStatus();
		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.Status getStatus();
		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder();

		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		boolean hasPowerGenerationParameters();
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters();
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder();

		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		boolean hasInfo();
		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		io.pravah.solar.production.SolarProduction.Info getInfo();
		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder();

		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		java.util.List<io.pravah.solar.production.SolarProduction.Inverter>
		getInverterListList();
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		io.pravah.solar.production.SolarProduction.Inverter getInverterList(int index);
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		int getInverterListCount();
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		java.util.List<? extends io.pravah.solar.production.SolarProduction.InverterOrBuilder>
		getInverterListOrBuilderList();
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		io.pravah.solar.production.SolarProduction.InverterOrBuilder getInverterListOrBuilder(
				int index);

		/**
		 * <pre>
		 * timestamp identifies the moment when values are observed by the device.
		 * </pre>
		 *
		 * <code>uint64 timestamp = 6;</code>
		 */
		long getTimestamp();
	}
	/**
	 * Protobuf type {@code solar_production.FeedStation}
	 */
	public  static final class FeedStation extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.FeedStation)
			FeedStationOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use FeedStation.newBuilder() to construct.
		private FeedStation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private FeedStation() {
			id_ = "";
			inverterList_ = java.util.Collections.emptyList();
			timestamp_ = 0L;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private FeedStation(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							java.lang.String s = input.readStringRequireUtf8();

							id_ = s;
							break;
						}
						case 18: {
							io.pravah.solar.production.SolarProduction.Status.Builder subBuilder = null;
							if (status_ != null) {
								subBuilder = status_.toBuilder();
							}
							status_ = input.readMessage(io.pravah.solar.production.SolarProduction.Status.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(status_);
								status_ = subBuilder.buildPartial();
							}

							break;
						}
						case 26: {
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder subBuilder = null;
							if (powerGenerationParameters_ != null) {
								subBuilder = powerGenerationParameters_.toBuilder();
							}
							powerGenerationParameters_ = input.readMessage(io.pravah.solar.production.SolarProduction.PowerGenerationParameters.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(powerGenerationParameters_);
								powerGenerationParameters_ = subBuilder.buildPartial();
							}

							break;
						}
						case 34: {
							io.pravah.solar.production.SolarProduction.Info.Builder subBuilder = null;
							if (info_ != null) {
								subBuilder = info_.toBuilder();
							}
							info_ = input.readMessage(io.pravah.solar.production.SolarProduction.Info.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(info_);
								info_ = subBuilder.buildPartial();
							}

							break;
						}
						case 42: {
							if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
								inverterList_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.Inverter>();
								mutable_bitField0_ |= 0x00000010;
							}
							inverterList_.add(
									input.readMessage(io.pravah.solar.production.SolarProduction.Inverter.parser(), extensionRegistry));
							break;
						}
						case 48: {

							timestamp_ = input.readUInt64();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
					inverterList_ = java.util.Collections.unmodifiableList(inverterList_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedStation_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedStation_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.FeedStation.class, io.pravah.solar.production.SolarProduction.FeedStation.Builder.class);
		}

		private int bitField0_;
		public static final int ID_FIELD_NUMBER = 1;
		private volatile java.lang.Object id_;
		/**
		 * <pre>
		 * id identifies each station uniquely.
		 * </pre>
		 *
		 * <code>string id = 1;</code>
		 */
		public java.lang.String getId() {
			java.lang.Object ref = id_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				id_ = s;
				return s;
			}
		}
		/**
		 * <pre>
		 * id identifies each station uniquely.
		 * </pre>
		 *
		 * <code>string id = 1;</code>
		 */
		public com.google.protobuf.ByteString
		getIdBytes() {
			java.lang.Object ref = id_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				id_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int STATUS_FIELD_NUMBER = 2;
		private io.pravah.solar.production.SolarProduction.Status status_;
		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public boolean hasStatus() {
			return status_ != null;
		}
		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Status getStatus() {
			return status_ == null ? io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
		}
		/**
		 * <pre>
		 * Station status.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder() {
			return getStatus();
		}

		public static final int POWERGENERATIONPARAMETERS_FIELD_NUMBER = 3;
		private io.pravah.solar.production.SolarProduction.PowerGenerationParameters powerGenerationParameters_;
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		public boolean hasPowerGenerationParameters() {
			return powerGenerationParameters_ != null;
		}
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters() {
			return powerGenerationParameters_ == null ? io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
		}
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder() {
			return getPowerGenerationParameters();
		}

		public static final int INFO_FIELD_NUMBER = 4;
		private io.pravah.solar.production.SolarProduction.Info info_;
		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		public boolean hasInfo() {
			return info_ != null;
		}
		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Info getInfo() {
			return info_ == null ? io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
		}
		/**
		 * <code>.solar_production.Info info = 4;</code>
		 */
		public io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder() {
			return getInfo();
		}

		public static final int INVERTERLIST_FIELD_NUMBER = 5;
		private java.util.List<io.pravah.solar.production.SolarProduction.Inverter> inverterList_;
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		public java.util.List<io.pravah.solar.production.SolarProduction.Inverter> getInverterListList() {
			return inverterList_;
		}
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		public java.util.List<? extends io.pravah.solar.production.SolarProduction.InverterOrBuilder>
		getInverterListOrBuilderList() {
			return inverterList_;
		}
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		public int getInverterListCount() {
			return inverterList_.size();
		}
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Inverter getInverterList(int index) {
			return inverterList_.get(index);
		}
		/**
		 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
		 */
		public io.pravah.solar.production.SolarProduction.InverterOrBuilder getInverterListOrBuilder(
				int index) {
			return inverterList_.get(index);
		}

		public static final int TIMESTAMP_FIELD_NUMBER = 6;
		private long timestamp_;
		/**
		 * <pre>
		 * timestamp identifies the moment when values are observed by the device.
		 * </pre>
		 *
		 * <code>uint64 timestamp = 6;</code>
		 */
		public long getTimestamp() {
			return timestamp_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (!getIdBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
			}
			if (status_ != null) {
				output.writeMessage(2, getStatus());
			}
			if (powerGenerationParameters_ != null) {
				output.writeMessage(3, getPowerGenerationParameters());
			}
			if (info_ != null) {
				output.writeMessage(4, getInfo());
			}
			for (int i = 0; i < inverterList_.size(); i++) {
				output.writeMessage(5, inverterList_.get(i));
			}
			if (timestamp_ != 0L) {
				output.writeUInt64(6, timestamp_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (!getIdBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
			}
			if (status_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(2, getStatus());
			}
			if (powerGenerationParameters_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(3, getPowerGenerationParameters());
			}
			if (info_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(4, getInfo());
			}
			for (int i = 0; i < inverterList_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(5, inverterList_.get(i));
			}
			if (timestamp_ != 0L) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(6, timestamp_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.FeedStation)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.FeedStation other = (io.pravah.solar.production.SolarProduction.FeedStation) obj;

			boolean result = true;
			result = result && getId()
					.equals(other.getId());
			result = result && (hasStatus() == other.hasStatus());
			if (hasStatus()) {
				result = result && getStatus()
						.equals(other.getStatus());
			}
			result = result && (hasPowerGenerationParameters() == other.hasPowerGenerationParameters());
			if (hasPowerGenerationParameters()) {
				result = result && getPowerGenerationParameters()
						.equals(other.getPowerGenerationParameters());
			}
			result = result && (hasInfo() == other.hasInfo());
			if (hasInfo()) {
				result = result && getInfo()
						.equals(other.getInfo());
			}
			result = result && getInverterListList()
					.equals(other.getInverterListList());
			result = result && (getTimestamp()
					== other.getTimestamp());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + ID_FIELD_NUMBER;
			hash = (53 * hash) + getId().hashCode();
			if (hasStatus()) {
				hash = (37 * hash) + STATUS_FIELD_NUMBER;
				hash = (53 * hash) + getStatus().hashCode();
			}
			if (hasPowerGenerationParameters()) {
				hash = (37 * hash) + POWERGENERATIONPARAMETERS_FIELD_NUMBER;
				hash = (53 * hash) + getPowerGenerationParameters().hashCode();
			}
			if (hasInfo()) {
				hash = (37 * hash) + INFO_FIELD_NUMBER;
				hash = (53 * hash) + getInfo().hashCode();
			}
			if (getInverterListCount() > 0) {
				hash = (37 * hash) + INVERTERLIST_FIELD_NUMBER;
				hash = (53 * hash) + getInverterListList().hashCode();
			}
			hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					getTimestamp());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.FeedStation parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.FeedStation prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.FeedStation}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.FeedStation)
				io.pravah.solar.production.SolarProduction.FeedStationOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedStation_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedStation_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.FeedStation.class, io.pravah.solar.production.SolarProduction.FeedStation.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.FeedStation.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
					getInverterListFieldBuilder();
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				id_ = "";

				if (statusBuilder_ == null) {
					status_ = null;
				} else {
					status_ = null;
					statusBuilder_ = null;
				}
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = null;
				} else {
					powerGenerationParameters_ = null;
					powerGenerationParametersBuilder_ = null;
				}
				if (infoBuilder_ == null) {
					info_ = null;
				} else {
					info_ = null;
					infoBuilder_ = null;
				}
				if (inverterListBuilder_ == null) {
					inverterList_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000010);
				} else {
					inverterListBuilder_.clear();
				}
				timestamp_ = 0L;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_FeedStation_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedStation getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.FeedStation.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedStation build() {
				io.pravah.solar.production.SolarProduction.FeedStation result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.FeedStation buildPartial() {
				io.pravah.solar.production.SolarProduction.FeedStation result = new io.pravah.solar.production.SolarProduction.FeedStation(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				result.id_ = id_;
				if (statusBuilder_ == null) {
					result.status_ = status_;
				} else {
					result.status_ = statusBuilder_.build();
				}
				if (powerGenerationParametersBuilder_ == null) {
					result.powerGenerationParameters_ = powerGenerationParameters_;
				} else {
					result.powerGenerationParameters_ = powerGenerationParametersBuilder_.build();
				}
				if (infoBuilder_ == null) {
					result.info_ = info_;
				} else {
					result.info_ = infoBuilder_.build();
				}
				if (inverterListBuilder_ == null) {
					if (((bitField0_ & 0x00000010) == 0x00000010)) {
						inverterList_ = java.util.Collections.unmodifiableList(inverterList_);
						bitField0_ = (bitField0_ & ~0x00000010);
					}
					result.inverterList_ = inverterList_;
				} else {
					result.inverterList_ = inverterListBuilder_.build();
				}
				result.timestamp_ = timestamp_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.FeedStation) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.FeedStation)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.FeedStation other) {
				if (other == io.pravah.solar.production.SolarProduction.FeedStation.getDefaultInstance()) return this;
				if (!other.getId().isEmpty()) {
					id_ = other.id_;
					onChanged();
				}
				if (other.hasStatus()) {
					mergeStatus(other.getStatus());
				}
				if (other.hasPowerGenerationParameters()) {
					mergePowerGenerationParameters(other.getPowerGenerationParameters());
				}
				if (other.hasInfo()) {
					mergeInfo(other.getInfo());
				}
				if (inverterListBuilder_ == null) {
					if (!other.inverterList_.isEmpty()) {
						if (inverterList_.isEmpty()) {
							inverterList_ = other.inverterList_;
							bitField0_ = (bitField0_ & ~0x00000010);
						} else {
							ensureInverterListIsMutable();
							inverterList_.addAll(other.inverterList_);
						}
						onChanged();
					}
				} else {
					if (!other.inverterList_.isEmpty()) {
						if (inverterListBuilder_.isEmpty()) {
							inverterListBuilder_.dispose();
							inverterListBuilder_ = null;
							inverterList_ = other.inverterList_;
							bitField0_ = (bitField0_ & ~0x00000010);
							inverterListBuilder_ =
									com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
											getInverterListFieldBuilder() : null;
						} else {
							inverterListBuilder_.addAllMessages(other.inverterList_);
						}
					}
				}
				if (other.getTimestamp() != 0L) {
					setTimestamp(other.getTimestamp());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.FeedStation parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.FeedStation) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}
			private int bitField0_;

			private java.lang.Object id_ = "";
			/**
			 * <pre>
			 * id identifies each station uniquely.
			 * </pre>
			 *
			 * <code>string id = 1;</code>
			 */
			public java.lang.String getId() {
				java.lang.Object ref = id_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					id_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <pre>
			 * id identifies each station uniquely.
			 * </pre>
			 *
			 * <code>string id = 1;</code>
			 */
			public com.google.protobuf.ByteString
			getIdBytes() {
				java.lang.Object ref = id_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					id_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <pre>
			 * id identifies each station uniquely.
			 * </pre>
			 *
			 * <code>string id = 1;</code>
			 */
			public Builder setId(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				id_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * id identifies each station uniquely.
			 * </pre>
			 *
			 * <code>string id = 1;</code>
			 */
			public Builder clearId() {

				id_ = getDefaultInstance().getId();
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * id identifies each station uniquely.
			 * </pre>
			 *
			 * <code>string id = 1;</code>
			 */
			public Builder setIdBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				id_ = value;
				onChanged();
				return this;
			}

			private io.pravah.solar.production.SolarProduction.Status status_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder> statusBuilder_;
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public boolean hasStatus() {
				return statusBuilder_ != null || status_ != null;
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Status getStatus() {
				if (statusBuilder_ == null) {
					return status_ == null ? io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
				} else {
					return statusBuilder_.getMessage();
				}
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder setStatus(io.pravah.solar.production.SolarProduction.Status value) {
				if (statusBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					status_ = value;
					onChanged();
				} else {
					statusBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder setStatus(
					io.pravah.solar.production.SolarProduction.Status.Builder builderForValue) {
				if (statusBuilder_ == null) {
					status_ = builderForValue.build();
					onChanged();
				} else {
					statusBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder mergeStatus(io.pravah.solar.production.SolarProduction.Status value) {
				if (statusBuilder_ == null) {
					if (status_ != null) {
						status_ =
								io.pravah.solar.production.SolarProduction.Status.newBuilder(status_).mergeFrom(value).buildPartial();
					} else {
						status_ = value;
					}
					onChanged();
				} else {
					statusBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder clearStatus() {
				if (statusBuilder_ == null) {
					status_ = null;
					onChanged();
				} else {
					status_ = null;
					statusBuilder_ = null;
				}

				return this;
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Status.Builder getStatusBuilder() {

				onChanged();
				return getStatusFieldBuilder().getBuilder();
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder() {
				if (statusBuilder_ != null) {
					return statusBuilder_.getMessageOrBuilder();
				} else {
					return status_ == null ?
							io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
				}
			}
			/**
			 * <pre>
			 * Station status.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder>
			getStatusFieldBuilder() {
				if (statusBuilder_ == null) {
					statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder>(
							getStatus(),
							getParentForChildren(),
							isClean());
					status_ = null;
				}
				return statusBuilder_;
			}

			private io.pravah.solar.production.SolarProduction.PowerGenerationParameters powerGenerationParameters_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder> powerGenerationParametersBuilder_;
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public boolean hasPowerGenerationParameters() {
				return powerGenerationParametersBuilder_ != null || powerGenerationParameters_ != null;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters() {
				if (powerGenerationParametersBuilder_ == null) {
					return powerGenerationParameters_ == null ? io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
				} else {
					return powerGenerationParametersBuilder_.getMessage();
				}
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public Builder setPowerGenerationParameters(io.pravah.solar.production.SolarProduction.PowerGenerationParameters value) {
				if (powerGenerationParametersBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					powerGenerationParameters_ = value;
					onChanged();
				} else {
					powerGenerationParametersBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public Builder setPowerGenerationParameters(
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder builderForValue) {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = builderForValue.build();
					onChanged();
				} else {
					powerGenerationParametersBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public Builder mergePowerGenerationParameters(io.pravah.solar.production.SolarProduction.PowerGenerationParameters value) {
				if (powerGenerationParametersBuilder_ == null) {
					if (powerGenerationParameters_ != null) {
						powerGenerationParameters_ =
								io.pravah.solar.production.SolarProduction.PowerGenerationParameters.newBuilder(powerGenerationParameters_).mergeFrom(value).buildPartial();
					} else {
						powerGenerationParameters_ = value;
					}
					onChanged();
				} else {
					powerGenerationParametersBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public Builder clearPowerGenerationParameters() {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = null;
					onChanged();
				} else {
					powerGenerationParameters_ = null;
					powerGenerationParametersBuilder_ = null;
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder getPowerGenerationParametersBuilder() {

				onChanged();
				return getPowerGenerationParametersFieldBuilder().getBuilder();
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder() {
				if (powerGenerationParametersBuilder_ != null) {
					return powerGenerationParametersBuilder_.getMessageOrBuilder();
				} else {
					return powerGenerationParameters_ == null ?
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
				}
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 3;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder>
			getPowerGenerationParametersFieldBuilder() {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder>(
							getPowerGenerationParameters(),
							getParentForChildren(),
							isClean());
					powerGenerationParameters_ = null;
				}
				return powerGenerationParametersBuilder_;
			}

			private io.pravah.solar.production.SolarProduction.Info info_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder> infoBuilder_;
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public boolean hasInfo() {
				return infoBuilder_ != null || info_ != null;
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Info getInfo() {
				if (infoBuilder_ == null) {
					return info_ == null ? io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
				} else {
					return infoBuilder_.getMessage();
				}
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public Builder setInfo(io.pravah.solar.production.SolarProduction.Info value) {
				if (infoBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					info_ = value;
					onChanged();
				} else {
					infoBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public Builder setInfo(
					io.pravah.solar.production.SolarProduction.Info.Builder builderForValue) {
				if (infoBuilder_ == null) {
					info_ = builderForValue.build();
					onChanged();
				} else {
					infoBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public Builder mergeInfo(io.pravah.solar.production.SolarProduction.Info value) {
				if (infoBuilder_ == null) {
					if (info_ != null) {
						info_ =
								io.pravah.solar.production.SolarProduction.Info.newBuilder(info_).mergeFrom(value).buildPartial();
					} else {
						info_ = value;
					}
					onChanged();
				} else {
					infoBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public Builder clearInfo() {
				if (infoBuilder_ == null) {
					info_ = null;
					onChanged();
				} else {
					info_ = null;
					infoBuilder_ = null;
				}

				return this;
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Info.Builder getInfoBuilder() {

				onChanged();
				return getInfoFieldBuilder().getBuilder();
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder() {
				if (infoBuilder_ != null) {
					return infoBuilder_.getMessageOrBuilder();
				} else {
					return info_ == null ?
							io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
				}
			}
			/**
			 * <code>.solar_production.Info info = 4;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder>
			getInfoFieldBuilder() {
				if (infoBuilder_ == null) {
					infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder>(
							getInfo(),
							getParentForChildren(),
							isClean());
					info_ = null;
				}
				return infoBuilder_;
			}

			private java.util.List<io.pravah.solar.production.SolarProduction.Inverter> inverterList_ =
					java.util.Collections.emptyList();
			private void ensureInverterListIsMutable() {
				if (!((bitField0_ & 0x00000010) == 0x00000010)) {
					inverterList_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.Inverter>(inverterList_);
					bitField0_ |= 0x00000010;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Inverter, io.pravah.solar.production.SolarProduction.Inverter.Builder, io.pravah.solar.production.SolarProduction.InverterOrBuilder> inverterListBuilder_;

			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.Inverter> getInverterListList() {
				if (inverterListBuilder_ == null) {
					return java.util.Collections.unmodifiableList(inverterList_);
				} else {
					return inverterListBuilder_.getMessageList();
				}
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public int getInverterListCount() {
				if (inverterListBuilder_ == null) {
					return inverterList_.size();
				} else {
					return inverterListBuilder_.getCount();
				}
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Inverter getInverterList(int index) {
				if (inverterListBuilder_ == null) {
					return inverterList_.get(index);
				} else {
					return inverterListBuilder_.getMessage(index);
				}
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder setInverterList(
					int index, io.pravah.solar.production.SolarProduction.Inverter value) {
				if (inverterListBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureInverterListIsMutable();
					inverterList_.set(index, value);
					onChanged();
				} else {
					inverterListBuilder_.setMessage(index, value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder setInverterList(
					int index, io.pravah.solar.production.SolarProduction.Inverter.Builder builderForValue) {
				if (inverterListBuilder_ == null) {
					ensureInverterListIsMutable();
					inverterList_.set(index, builderForValue.build());
					onChanged();
				} else {
					inverterListBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder addInverterList(io.pravah.solar.production.SolarProduction.Inverter value) {
				if (inverterListBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureInverterListIsMutable();
					inverterList_.add(value);
					onChanged();
				} else {
					inverterListBuilder_.addMessage(value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder addInverterList(
					int index, io.pravah.solar.production.SolarProduction.Inverter value) {
				if (inverterListBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureInverterListIsMutable();
					inverterList_.add(index, value);
					onChanged();
				} else {
					inverterListBuilder_.addMessage(index, value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder addInverterList(
					io.pravah.solar.production.SolarProduction.Inverter.Builder builderForValue) {
				if (inverterListBuilder_ == null) {
					ensureInverterListIsMutable();
					inverterList_.add(builderForValue.build());
					onChanged();
				} else {
					inverterListBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder addInverterList(
					int index, io.pravah.solar.production.SolarProduction.Inverter.Builder builderForValue) {
				if (inverterListBuilder_ == null) {
					ensureInverterListIsMutable();
					inverterList_.add(index, builderForValue.build());
					onChanged();
				} else {
					inverterListBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder addAllInverterList(
					java.lang.Iterable<? extends io.pravah.solar.production.SolarProduction.Inverter> values) {
				if (inverterListBuilder_ == null) {
					ensureInverterListIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, inverterList_);
					onChanged();
				} else {
					inverterListBuilder_.addAllMessages(values);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder clearInverterList() {
				if (inverterListBuilder_ == null) {
					inverterList_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000010);
					onChanged();
				} else {
					inverterListBuilder_.clear();
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public Builder removeInverterList(int index) {
				if (inverterListBuilder_ == null) {
					ensureInverterListIsMutable();
					inverterList_.remove(index);
					onChanged();
				} else {
					inverterListBuilder_.remove(index);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Inverter.Builder getInverterListBuilder(
					int index) {
				return getInverterListFieldBuilder().getBuilder(index);
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.InverterOrBuilder getInverterListOrBuilder(
					int index) {
				if (inverterListBuilder_ == null) {
					return inverterList_.get(index);  } else {
					return inverterListBuilder_.getMessageOrBuilder(index);
				}
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public java.util.List<? extends io.pravah.solar.production.SolarProduction.InverterOrBuilder>
			getInverterListOrBuilderList() {
				if (inverterListBuilder_ != null) {
					return inverterListBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(inverterList_);
				}
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Inverter.Builder addInverterListBuilder() {
				return getInverterListFieldBuilder().addBuilder(
						io.pravah.solar.production.SolarProduction.Inverter.getDefaultInstance());
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Inverter.Builder addInverterListBuilder(
					int index) {
				return getInverterListFieldBuilder().addBuilder(
						index, io.pravah.solar.production.SolarProduction.Inverter.getDefaultInstance());
			}
			/**
			 * <code>repeated .solar_production.Inverter inverterList = 5;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.Inverter.Builder>
			getInverterListBuilderList() {
				return getInverterListFieldBuilder().getBuilderList();
			}
			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Inverter, io.pravah.solar.production.SolarProduction.Inverter.Builder, io.pravah.solar.production.SolarProduction.InverterOrBuilder>
			getInverterListFieldBuilder() {
				if (inverterListBuilder_ == null) {
					inverterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Inverter, io.pravah.solar.production.SolarProduction.Inverter.Builder, io.pravah.solar.production.SolarProduction.InverterOrBuilder>(
							inverterList_,
							((bitField0_ & 0x00000010) == 0x00000010),
							getParentForChildren(),
							isClean());
					inverterList_ = null;
				}
				return inverterListBuilder_;
			}

			private long timestamp_ ;
			/**
			 * <pre>
			 * timestamp identifies the moment when values are observed by the device.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 6;</code>
			 */
			public long getTimestamp() {
				return timestamp_;
			}
			/**
			 * <pre>
			 * timestamp identifies the moment when values are observed by the device.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 6;</code>
			 */
			public Builder setTimestamp(long value) {

				timestamp_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * timestamp identifies the moment when values are observed by the device.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 6;</code>
			 */
			public Builder clearTimestamp() {

				timestamp_ = 0L;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.FeedStation)
		}

		// @@protoc_insertion_point(class_scope:solar_production.FeedStation)
		private static final io.pravah.solar.production.SolarProduction.FeedStation DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.FeedStation();
		}

		public static io.pravah.solar.production.SolarProduction.FeedStation getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<FeedStation>
				PARSER = new com.google.protobuf.AbstractParser<FeedStation>() {
			@java.lang.Override
			public FeedStation parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new FeedStation(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<FeedStation> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<FeedStation> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.FeedStation getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface InverterOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.Inverter)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>string id = 1;</code>
		 */
		java.lang.String getId();
		/**
		 * <code>string id = 1;</code>
		 */
		com.google.protobuf.ByteString
		getIdBytes();

		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		boolean hasStatus();
		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.Status getStatus();
		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder();

		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents>
		getPhaseComponentsList();
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.PhaseComponents getPhaseComponents(int index);
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		int getPhaseComponentsCount();
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		java.util.List<? extends io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder>
		getPhaseComponentsOrBuilderList();
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder getPhaseComponentsOrBuilder(
				int index);

		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup>
		getSolarPanelGroupList();
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		io.pravah.solar.production.SolarProduction.SolarPanelGroup getSolarPanelGroup(int index);
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		int getSolarPanelGroupCount();
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		java.util.List<? extends io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder>
		getSolarPanelGroupOrBuilderList();
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder getSolarPanelGroupOrBuilder(
				int index);

		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		boolean hasPowerGenerationParameters();
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters();
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder();

		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		boolean hasInfo();
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		io.pravah.solar.production.SolarProduction.Info getInfo();
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder();

		/**
		 * <pre>
		 * timestamp when this measure was taken by the instrument.
		 * </pre>
		 *
		 * <code>uint64 timestamp = 7;</code>
		 */
		long getTimestamp();
	}
	/**
	 * Protobuf type {@code solar_production.Inverter}
	 */
	public  static final class Inverter extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.Inverter)
			InverterOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use Inverter.newBuilder() to construct.
		private Inverter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private Inverter() {
			id_ = "";
			phaseComponents_ = java.util.Collections.emptyList();
			solarPanelGroup_ = java.util.Collections.emptyList();
			timestamp_ = 0L;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private Inverter(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							java.lang.String s = input.readStringRequireUtf8();

							id_ = s;
							break;
						}
						case 18: {
							io.pravah.solar.production.SolarProduction.Status.Builder subBuilder = null;
							if (status_ != null) {
								subBuilder = status_.toBuilder();
							}
							status_ = input.readMessage(io.pravah.solar.production.SolarProduction.Status.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(status_);
								status_ = subBuilder.buildPartial();
							}

							break;
						}
						case 26: {
							if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
								phaseComponents_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.PhaseComponents>();
								mutable_bitField0_ |= 0x00000004;
							}
							phaseComponents_.add(
									input.readMessage(io.pravah.solar.production.SolarProduction.PhaseComponents.parser(), extensionRegistry));
							break;
						}
						case 34: {
							if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
								solarPanelGroup_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.SolarPanelGroup>();
								mutable_bitField0_ |= 0x00000008;
							}
							solarPanelGroup_.add(
									input.readMessage(io.pravah.solar.production.SolarProduction.SolarPanelGroup.parser(), extensionRegistry));
							break;
						}
						case 42: {
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder subBuilder = null;
							if (powerGenerationParameters_ != null) {
								subBuilder = powerGenerationParameters_.toBuilder();
							}
							powerGenerationParameters_ = input.readMessage(io.pravah.solar.production.SolarProduction.PowerGenerationParameters.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(powerGenerationParameters_);
								powerGenerationParameters_ = subBuilder.buildPartial();
							}

							break;
						}
						case 50: {
							io.pravah.solar.production.SolarProduction.Info.Builder subBuilder = null;
							if (info_ != null) {
								subBuilder = info_.toBuilder();
							}
							info_ = input.readMessage(io.pravah.solar.production.SolarProduction.Info.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(info_);
								info_ = subBuilder.buildPartial();
							}

							break;
						}
						case 56: {

							timestamp_ = input.readUInt64();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
					phaseComponents_ = java.util.Collections.unmodifiableList(phaseComponents_);
				}
				if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
					solarPanelGroup_ = java.util.Collections.unmodifiableList(solarPanelGroup_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Inverter_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Inverter_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.Inverter.class, io.pravah.solar.production.SolarProduction.Inverter.Builder.class);
		}

		private int bitField0_;
		public static final int ID_FIELD_NUMBER = 1;
		private volatile java.lang.Object id_;
		/**
		 * <code>string id = 1;</code>
		 */
		public java.lang.String getId() {
			java.lang.Object ref = id_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				id_ = s;
				return s;
			}
		}
		/**
		 * <code>string id = 1;</code>
		 */
		public com.google.protobuf.ByteString
		getIdBytes() {
			java.lang.Object ref = id_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				id_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int STATUS_FIELD_NUMBER = 2;
		private io.pravah.solar.production.SolarProduction.Status status_;
		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public boolean hasStatus() {
			return status_ != null;
		}
		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Status getStatus() {
			return status_ == null ? io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
		}
		/**
		 * <pre>
		 * Status of the inverter.
		 * </pre>
		 *
		 * <code>.solar_production.Status status = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder() {
			return getStatus();
		}

		public static final int PHASECOMPONENTS_FIELD_NUMBER = 3;
		private java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents> phaseComponents_;
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		public java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents> getPhaseComponentsList() {
			return phaseComponents_;
		}
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		public java.util.List<? extends io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder>
		getPhaseComponentsOrBuilderList() {
			return phaseComponents_;
		}
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		public int getPhaseComponentsCount() {
			return phaseComponents_.size();
		}
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PhaseComponents getPhaseComponents(int index) {
			return phaseComponents_.get(index);
		}
		/**
		 * <pre>
		 * Power Generation Data
		 * </pre>
		 *
		 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder getPhaseComponentsOrBuilder(
				int index) {
			return phaseComponents_.get(index);
		}

		public static final int SOLARPANELGROUP_FIELD_NUMBER = 4;
		private java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup> solarPanelGroup_;
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		public java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup> getSolarPanelGroupList() {
			return solarPanelGroup_;
		}
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		public java.util.List<? extends io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder>
		getSolarPanelGroupOrBuilderList() {
			return solarPanelGroup_;
		}
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		public int getSolarPanelGroupCount() {
			return solarPanelGroup_.size();
		}
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		public io.pravah.solar.production.SolarProduction.SolarPanelGroup getSolarPanelGroup(int index) {
			return solarPanelGroup_.get(index);
		}
		/**
		 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
		 */
		public io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder getSolarPanelGroupOrBuilder(
				int index) {
			return solarPanelGroup_.get(index);
		}

		public static final int POWERGENERATIONPARAMETERS_FIELD_NUMBER = 5;
		private io.pravah.solar.production.SolarProduction.PowerGenerationParameters powerGenerationParameters_;
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		public boolean hasPowerGenerationParameters() {
			return powerGenerationParameters_ != null;
		}
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters() {
			return powerGenerationParameters_ == null ? io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
		}
		/**
		 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder() {
			return getPowerGenerationParameters();
		}

		public static final int INFO_FIELD_NUMBER = 6;
		private io.pravah.solar.production.SolarProduction.Info info_;
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		public boolean hasInfo() {
			return info_ != null;
		}
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Info getInfo() {
			return info_ == null ? io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
		}
		/**
		 * <pre>
		 * Metadata
		 * </pre>
		 *
		 * <code>.solar_production.Info info = 6;</code>
		 */
		public io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder() {
			return getInfo();
		}

		public static final int TIMESTAMP_FIELD_NUMBER = 7;
		private long timestamp_;
		/**
		 * <pre>
		 * timestamp when this measure was taken by the instrument.
		 * </pre>
		 *
		 * <code>uint64 timestamp = 7;</code>
		 */
		public long getTimestamp() {
			return timestamp_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (!getIdBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
			}
			if (status_ != null) {
				output.writeMessage(2, getStatus());
			}
			for (int i = 0; i < phaseComponents_.size(); i++) {
				output.writeMessage(3, phaseComponents_.get(i));
			}
			for (int i = 0; i < solarPanelGroup_.size(); i++) {
				output.writeMessage(4, solarPanelGroup_.get(i));
			}
			if (powerGenerationParameters_ != null) {
				output.writeMessage(5, getPowerGenerationParameters());
			}
			if (info_ != null) {
				output.writeMessage(6, getInfo());
			}
			if (timestamp_ != 0L) {
				output.writeUInt64(7, timestamp_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (!getIdBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
			}
			if (status_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(2, getStatus());
			}
			for (int i = 0; i < phaseComponents_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(3, phaseComponents_.get(i));
			}
			for (int i = 0; i < solarPanelGroup_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(4, solarPanelGroup_.get(i));
			}
			if (powerGenerationParameters_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(5, getPowerGenerationParameters());
			}
			if (info_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(6, getInfo());
			}
			if (timestamp_ != 0L) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(7, timestamp_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.Inverter)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.Inverter other = (io.pravah.solar.production.SolarProduction.Inverter) obj;

			boolean result = true;
			result = result && getId()
					.equals(other.getId());
			result = result && (hasStatus() == other.hasStatus());
			if (hasStatus()) {
				result = result && getStatus()
						.equals(other.getStatus());
			}
			result = result && getPhaseComponentsList()
					.equals(other.getPhaseComponentsList());
			result = result && getSolarPanelGroupList()
					.equals(other.getSolarPanelGroupList());
			result = result && (hasPowerGenerationParameters() == other.hasPowerGenerationParameters());
			if (hasPowerGenerationParameters()) {
				result = result && getPowerGenerationParameters()
						.equals(other.getPowerGenerationParameters());
			}
			result = result && (hasInfo() == other.hasInfo());
			if (hasInfo()) {
				result = result && getInfo()
						.equals(other.getInfo());
			}
			result = result && (getTimestamp()
					== other.getTimestamp());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + ID_FIELD_NUMBER;
			hash = (53 * hash) + getId().hashCode();
			if (hasStatus()) {
				hash = (37 * hash) + STATUS_FIELD_NUMBER;
				hash = (53 * hash) + getStatus().hashCode();
			}
			if (getPhaseComponentsCount() > 0) {
				hash = (37 * hash) + PHASECOMPONENTS_FIELD_NUMBER;
				hash = (53 * hash) + getPhaseComponentsList().hashCode();
			}
			if (getSolarPanelGroupCount() > 0) {
				hash = (37 * hash) + SOLARPANELGROUP_FIELD_NUMBER;
				hash = (53 * hash) + getSolarPanelGroupList().hashCode();
			}
			if (hasPowerGenerationParameters()) {
				hash = (37 * hash) + POWERGENERATIONPARAMETERS_FIELD_NUMBER;
				hash = (53 * hash) + getPowerGenerationParameters().hashCode();
			}
			if (hasInfo()) {
				hash = (37 * hash) + INFO_FIELD_NUMBER;
				hash = (53 * hash) + getInfo().hashCode();
			}
			hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					getTimestamp());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Inverter parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.Inverter prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.Inverter}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.Inverter)
				io.pravah.solar.production.SolarProduction.InverterOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Inverter_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Inverter_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.Inverter.class, io.pravah.solar.production.SolarProduction.Inverter.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.Inverter.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
					getPhaseComponentsFieldBuilder();
					getSolarPanelGroupFieldBuilder();
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				id_ = "";

				if (statusBuilder_ == null) {
					status_ = null;
				} else {
					status_ = null;
					statusBuilder_ = null;
				}
				if (phaseComponentsBuilder_ == null) {
					phaseComponents_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000004);
				} else {
					phaseComponentsBuilder_.clear();
				}
				if (solarPanelGroupBuilder_ == null) {
					solarPanelGroup_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000008);
				} else {
					solarPanelGroupBuilder_.clear();
				}
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = null;
				} else {
					powerGenerationParameters_ = null;
					powerGenerationParametersBuilder_ = null;
				}
				if (infoBuilder_ == null) {
					info_ = null;
				} else {
					info_ = null;
					infoBuilder_ = null;
				}
				timestamp_ = 0L;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Inverter_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Inverter getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.Inverter.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Inverter build() {
				io.pravah.solar.production.SolarProduction.Inverter result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Inverter buildPartial() {
				io.pravah.solar.production.SolarProduction.Inverter result = new io.pravah.solar.production.SolarProduction.Inverter(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				result.id_ = id_;
				if (statusBuilder_ == null) {
					result.status_ = status_;
				} else {
					result.status_ = statusBuilder_.build();
				}
				if (phaseComponentsBuilder_ == null) {
					if (((bitField0_ & 0x00000004) == 0x00000004)) {
						phaseComponents_ = java.util.Collections.unmodifiableList(phaseComponents_);
						bitField0_ = (bitField0_ & ~0x00000004);
					}
					result.phaseComponents_ = phaseComponents_;
				} else {
					result.phaseComponents_ = phaseComponentsBuilder_.build();
				}
				if (solarPanelGroupBuilder_ == null) {
					if (((bitField0_ & 0x00000008) == 0x00000008)) {
						solarPanelGroup_ = java.util.Collections.unmodifiableList(solarPanelGroup_);
						bitField0_ = (bitField0_ & ~0x00000008);
					}
					result.solarPanelGroup_ = solarPanelGroup_;
				} else {
					result.solarPanelGroup_ = solarPanelGroupBuilder_.build();
				}
				if (powerGenerationParametersBuilder_ == null) {
					result.powerGenerationParameters_ = powerGenerationParameters_;
				} else {
					result.powerGenerationParameters_ = powerGenerationParametersBuilder_.build();
				}
				if (infoBuilder_ == null) {
					result.info_ = info_;
				} else {
					result.info_ = infoBuilder_.build();
				}
				result.timestamp_ = timestamp_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.Inverter) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.Inverter)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.Inverter other) {
				if (other == io.pravah.solar.production.SolarProduction.Inverter.getDefaultInstance()) return this;
				if (!other.getId().isEmpty()) {
					id_ = other.id_;
					onChanged();
				}
				if (other.hasStatus()) {
					mergeStatus(other.getStatus());
				}
				if (phaseComponentsBuilder_ == null) {
					if (!other.phaseComponents_.isEmpty()) {
						if (phaseComponents_.isEmpty()) {
							phaseComponents_ = other.phaseComponents_;
							bitField0_ = (bitField0_ & ~0x00000004);
						} else {
							ensurePhaseComponentsIsMutable();
							phaseComponents_.addAll(other.phaseComponents_);
						}
						onChanged();
					}
				} else {
					if (!other.phaseComponents_.isEmpty()) {
						if (phaseComponentsBuilder_.isEmpty()) {
							phaseComponentsBuilder_.dispose();
							phaseComponentsBuilder_ = null;
							phaseComponents_ = other.phaseComponents_;
							bitField0_ = (bitField0_ & ~0x00000004);
							phaseComponentsBuilder_ =
									com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
											getPhaseComponentsFieldBuilder() : null;
						} else {
							phaseComponentsBuilder_.addAllMessages(other.phaseComponents_);
						}
					}
				}
				if (solarPanelGroupBuilder_ == null) {
					if (!other.solarPanelGroup_.isEmpty()) {
						if (solarPanelGroup_.isEmpty()) {
							solarPanelGroup_ = other.solarPanelGroup_;
							bitField0_ = (bitField0_ & ~0x00000008);
						} else {
							ensureSolarPanelGroupIsMutable();
							solarPanelGroup_.addAll(other.solarPanelGroup_);
						}
						onChanged();
					}
				} else {
					if (!other.solarPanelGroup_.isEmpty()) {
						if (solarPanelGroupBuilder_.isEmpty()) {
							solarPanelGroupBuilder_.dispose();
							solarPanelGroupBuilder_ = null;
							solarPanelGroup_ = other.solarPanelGroup_;
							bitField0_ = (bitField0_ & ~0x00000008);
							solarPanelGroupBuilder_ =
									com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
											getSolarPanelGroupFieldBuilder() : null;
						} else {
							solarPanelGroupBuilder_.addAllMessages(other.solarPanelGroup_);
						}
					}
				}
				if (other.hasPowerGenerationParameters()) {
					mergePowerGenerationParameters(other.getPowerGenerationParameters());
				}
				if (other.hasInfo()) {
					mergeInfo(other.getInfo());
				}
				if (other.getTimestamp() != 0L) {
					setTimestamp(other.getTimestamp());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.Inverter parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.Inverter) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}
			private int bitField0_;

			private java.lang.Object id_ = "";
			/**
			 * <code>string id = 1;</code>
			 */
			public java.lang.String getId() {
				java.lang.Object ref = id_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					id_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <code>string id = 1;</code>
			 */
			public com.google.protobuf.ByteString
			getIdBytes() {
				java.lang.Object ref = id_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					id_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <code>string id = 1;</code>
			 */
			public Builder setId(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				id_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>string id = 1;</code>
			 */
			public Builder clearId() {

				id_ = getDefaultInstance().getId();
				onChanged();
				return this;
			}
			/**
			 * <code>string id = 1;</code>
			 */
			public Builder setIdBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				id_ = value;
				onChanged();
				return this;
			}

			private io.pravah.solar.production.SolarProduction.Status status_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder> statusBuilder_;
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public boolean hasStatus() {
				return statusBuilder_ != null || status_ != null;
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Status getStatus() {
				if (statusBuilder_ == null) {
					return status_ == null ? io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
				} else {
					return statusBuilder_.getMessage();
				}
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder setStatus(io.pravah.solar.production.SolarProduction.Status value) {
				if (statusBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					status_ = value;
					onChanged();
				} else {
					statusBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder setStatus(
					io.pravah.solar.production.SolarProduction.Status.Builder builderForValue) {
				if (statusBuilder_ == null) {
					status_ = builderForValue.build();
					onChanged();
				} else {
					statusBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder mergeStatus(io.pravah.solar.production.SolarProduction.Status value) {
				if (statusBuilder_ == null) {
					if (status_ != null) {
						status_ =
								io.pravah.solar.production.SolarProduction.Status.newBuilder(status_).mergeFrom(value).buildPartial();
					} else {
						status_ = value;
					}
					onChanged();
				} else {
					statusBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public Builder clearStatus() {
				if (statusBuilder_ == null) {
					status_ = null;
					onChanged();
				} else {
					status_ = null;
					statusBuilder_ = null;
				}

				return this;
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Status.Builder getStatusBuilder() {

				onChanged();
				return getStatusFieldBuilder().getBuilder();
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.StatusOrBuilder getStatusOrBuilder() {
				if (statusBuilder_ != null) {
					return statusBuilder_.getMessageOrBuilder();
				} else {
					return status_ == null ?
							io.pravah.solar.production.SolarProduction.Status.getDefaultInstance() : status_;
				}
			}
			/**
			 * <pre>
			 * Status of the inverter.
			 * </pre>
			 *
			 * <code>.solar_production.Status status = 2;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder>
			getStatusFieldBuilder() {
				if (statusBuilder_ == null) {
					statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Status, io.pravah.solar.production.SolarProduction.Status.Builder, io.pravah.solar.production.SolarProduction.StatusOrBuilder>(
							getStatus(),
							getParentForChildren(),
							isClean());
					status_ = null;
				}
				return statusBuilder_;
			}

			private java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents> phaseComponents_ =
					java.util.Collections.emptyList();
			private void ensurePhaseComponentsIsMutable() {
				if (!((bitField0_ & 0x00000004) == 0x00000004)) {
					phaseComponents_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.PhaseComponents>(phaseComponents_);
					bitField0_ |= 0x00000004;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PhaseComponents, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder, io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder> phaseComponentsBuilder_;

			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents> getPhaseComponentsList() {
				if (phaseComponentsBuilder_ == null) {
					return java.util.Collections.unmodifiableList(phaseComponents_);
				} else {
					return phaseComponentsBuilder_.getMessageList();
				}
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public int getPhaseComponentsCount() {
				if (phaseComponentsBuilder_ == null) {
					return phaseComponents_.size();
				} else {
					return phaseComponentsBuilder_.getCount();
				}
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponents getPhaseComponents(int index) {
				if (phaseComponentsBuilder_ == null) {
					return phaseComponents_.get(index);
				} else {
					return phaseComponentsBuilder_.getMessage(index);
				}
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder setPhaseComponents(
					int index, io.pravah.solar.production.SolarProduction.PhaseComponents value) {
				if (phaseComponentsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensurePhaseComponentsIsMutable();
					phaseComponents_.set(index, value);
					onChanged();
				} else {
					phaseComponentsBuilder_.setMessage(index, value);
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder setPhaseComponents(
					int index, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder builderForValue) {
				if (phaseComponentsBuilder_ == null) {
					ensurePhaseComponentsIsMutable();
					phaseComponents_.set(index, builderForValue.build());
					onChanged();
				} else {
					phaseComponentsBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder addPhaseComponents(io.pravah.solar.production.SolarProduction.PhaseComponents value) {
				if (phaseComponentsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensurePhaseComponentsIsMutable();
					phaseComponents_.add(value);
					onChanged();
				} else {
					phaseComponentsBuilder_.addMessage(value);
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder addPhaseComponents(
					int index, io.pravah.solar.production.SolarProduction.PhaseComponents value) {
				if (phaseComponentsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensurePhaseComponentsIsMutable();
					phaseComponents_.add(index, value);
					onChanged();
				} else {
					phaseComponentsBuilder_.addMessage(index, value);
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder addPhaseComponents(
					io.pravah.solar.production.SolarProduction.PhaseComponents.Builder builderForValue) {
				if (phaseComponentsBuilder_ == null) {
					ensurePhaseComponentsIsMutable();
					phaseComponents_.add(builderForValue.build());
					onChanged();
				} else {
					phaseComponentsBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder addPhaseComponents(
					int index, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder builderForValue) {
				if (phaseComponentsBuilder_ == null) {
					ensurePhaseComponentsIsMutable();
					phaseComponents_.add(index, builderForValue.build());
					onChanged();
				} else {
					phaseComponentsBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder addAllPhaseComponents(
					java.lang.Iterable<? extends io.pravah.solar.production.SolarProduction.PhaseComponents> values) {
				if (phaseComponentsBuilder_ == null) {
					ensurePhaseComponentsIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, phaseComponents_);
					onChanged();
				} else {
					phaseComponentsBuilder_.addAllMessages(values);
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder clearPhaseComponents() {
				if (phaseComponentsBuilder_ == null) {
					phaseComponents_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000004);
					onChanged();
				} else {
					phaseComponentsBuilder_.clear();
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public Builder removePhaseComponents(int index) {
				if (phaseComponentsBuilder_ == null) {
					ensurePhaseComponentsIsMutable();
					phaseComponents_.remove(index);
					onChanged();
				} else {
					phaseComponentsBuilder_.remove(index);
				}
				return this;
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponents.Builder getPhaseComponentsBuilder(
					int index) {
				return getPhaseComponentsFieldBuilder().getBuilder(index);
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder getPhaseComponentsOrBuilder(
					int index) {
				if (phaseComponentsBuilder_ == null) {
					return phaseComponents_.get(index);  } else {
					return phaseComponentsBuilder_.getMessageOrBuilder(index);
				}
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public java.util.List<? extends io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder>
			getPhaseComponentsOrBuilderList() {
				if (phaseComponentsBuilder_ != null) {
					return phaseComponentsBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(phaseComponents_);
				}
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponents.Builder addPhaseComponentsBuilder() {
				return getPhaseComponentsFieldBuilder().addBuilder(
						io.pravah.solar.production.SolarProduction.PhaseComponents.getDefaultInstance());
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponents.Builder addPhaseComponentsBuilder(
					int index) {
				return getPhaseComponentsFieldBuilder().addBuilder(
						index, io.pravah.solar.production.SolarProduction.PhaseComponents.getDefaultInstance());
			}
			/**
			 * <pre>
			 * Power Generation Data
			 * </pre>
			 *
			 * <code>repeated .solar_production.PhaseComponents phaseComponents = 3;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.PhaseComponents.Builder>
			getPhaseComponentsBuilderList() {
				return getPhaseComponentsFieldBuilder().getBuilderList();
			}
			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PhaseComponents, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder, io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder>
			getPhaseComponentsFieldBuilder() {
				if (phaseComponentsBuilder_ == null) {
					phaseComponentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.PhaseComponents, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder, io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder>(
							phaseComponents_,
							((bitField0_ & 0x00000004) == 0x00000004),
							getParentForChildren(),
							isClean());
					phaseComponents_ = null;
				}
				return phaseComponentsBuilder_;
			}

			private java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup> solarPanelGroup_ =
					java.util.Collections.emptyList();
			private void ensureSolarPanelGroupIsMutable() {
				if (!((bitField0_ & 0x00000008) == 0x00000008)) {
					solarPanelGroup_ = new java.util.ArrayList<io.pravah.solar.production.SolarProduction.SolarPanelGroup>(solarPanelGroup_);
					bitField0_ |= 0x00000008;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.SolarPanelGroup, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder, io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder> solarPanelGroupBuilder_;

			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup> getSolarPanelGroupList() {
				if (solarPanelGroupBuilder_ == null) {
					return java.util.Collections.unmodifiableList(solarPanelGroup_);
				} else {
					return solarPanelGroupBuilder_.getMessageList();
				}
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public int getSolarPanelGroupCount() {
				if (solarPanelGroupBuilder_ == null) {
					return solarPanelGroup_.size();
				} else {
					return solarPanelGroupBuilder_.getCount();
				}
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup getSolarPanelGroup(int index) {
				if (solarPanelGroupBuilder_ == null) {
					return solarPanelGroup_.get(index);
				} else {
					return solarPanelGroupBuilder_.getMessage(index);
				}
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder setSolarPanelGroup(
					int index, io.pravah.solar.production.SolarProduction.SolarPanelGroup value) {
				if (solarPanelGroupBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.set(index, value);
					onChanged();
				} else {
					solarPanelGroupBuilder_.setMessage(index, value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder setSolarPanelGroup(
					int index, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder builderForValue) {
				if (solarPanelGroupBuilder_ == null) {
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.set(index, builderForValue.build());
					onChanged();
				} else {
					solarPanelGroupBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder addSolarPanelGroup(io.pravah.solar.production.SolarProduction.SolarPanelGroup value) {
				if (solarPanelGroupBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.add(value);
					onChanged();
				} else {
					solarPanelGroupBuilder_.addMessage(value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder addSolarPanelGroup(
					int index, io.pravah.solar.production.SolarProduction.SolarPanelGroup value) {
				if (solarPanelGroupBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.add(index, value);
					onChanged();
				} else {
					solarPanelGroupBuilder_.addMessage(index, value);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder addSolarPanelGroup(
					io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder builderForValue) {
				if (solarPanelGroupBuilder_ == null) {
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.add(builderForValue.build());
					onChanged();
				} else {
					solarPanelGroupBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder addSolarPanelGroup(
					int index, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder builderForValue) {
				if (solarPanelGroupBuilder_ == null) {
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.add(index, builderForValue.build());
					onChanged();
				} else {
					solarPanelGroupBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder addAllSolarPanelGroup(
					java.lang.Iterable<? extends io.pravah.solar.production.SolarProduction.SolarPanelGroup> values) {
				if (solarPanelGroupBuilder_ == null) {
					ensureSolarPanelGroupIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, solarPanelGroup_);
					onChanged();
				} else {
					solarPanelGroupBuilder_.addAllMessages(values);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder clearSolarPanelGroup() {
				if (solarPanelGroupBuilder_ == null) {
					solarPanelGroup_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000008);
					onChanged();
				} else {
					solarPanelGroupBuilder_.clear();
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public Builder removeSolarPanelGroup(int index) {
				if (solarPanelGroupBuilder_ == null) {
					ensureSolarPanelGroupIsMutable();
					solarPanelGroup_.remove(index);
					onChanged();
				} else {
					solarPanelGroupBuilder_.remove(index);
				}
				return this;
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder getSolarPanelGroupBuilder(
					int index) {
				return getSolarPanelGroupFieldBuilder().getBuilder(index);
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder getSolarPanelGroupOrBuilder(
					int index) {
				if (solarPanelGroupBuilder_ == null) {
					return solarPanelGroup_.get(index);  } else {
					return solarPanelGroupBuilder_.getMessageOrBuilder(index);
				}
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public java.util.List<? extends io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder>
			getSolarPanelGroupOrBuilderList() {
				if (solarPanelGroupBuilder_ != null) {
					return solarPanelGroupBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(solarPanelGroup_);
				}
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder addSolarPanelGroupBuilder() {
				return getSolarPanelGroupFieldBuilder().addBuilder(
						io.pravah.solar.production.SolarProduction.SolarPanelGroup.getDefaultInstance());
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder addSolarPanelGroupBuilder(
					int index) {
				return getSolarPanelGroupFieldBuilder().addBuilder(
						index, io.pravah.solar.production.SolarProduction.SolarPanelGroup.getDefaultInstance());
			}
			/**
			 * <code>repeated .solar_production.SolarPanelGroup solarPanelGroup = 4;</code>
			 */
			public java.util.List<io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder>
			getSolarPanelGroupBuilderList() {
				return getSolarPanelGroupFieldBuilder().getBuilderList();
			}
			private com.google.protobuf.RepeatedFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.SolarPanelGroup, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder, io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder>
			getSolarPanelGroupFieldBuilder() {
				if (solarPanelGroupBuilder_ == null) {
					solarPanelGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.SolarPanelGroup, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder, io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder>(
							solarPanelGroup_,
							((bitField0_ & 0x00000008) == 0x00000008),
							getParentForChildren(),
							isClean());
					solarPanelGroup_ = null;
				}
				return solarPanelGroupBuilder_;
			}

			private io.pravah.solar.production.SolarProduction.PowerGenerationParameters powerGenerationParameters_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder> powerGenerationParametersBuilder_;
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public boolean hasPowerGenerationParameters() {
				return powerGenerationParametersBuilder_ != null || powerGenerationParameters_ != null;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getPowerGenerationParameters() {
				if (powerGenerationParametersBuilder_ == null) {
					return powerGenerationParameters_ == null ? io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
				} else {
					return powerGenerationParametersBuilder_.getMessage();
				}
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public Builder setPowerGenerationParameters(io.pravah.solar.production.SolarProduction.PowerGenerationParameters value) {
				if (powerGenerationParametersBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					powerGenerationParameters_ = value;
					onChanged();
				} else {
					powerGenerationParametersBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public Builder setPowerGenerationParameters(
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder builderForValue) {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = builderForValue.build();
					onChanged();
				} else {
					powerGenerationParametersBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public Builder mergePowerGenerationParameters(io.pravah.solar.production.SolarProduction.PowerGenerationParameters value) {
				if (powerGenerationParametersBuilder_ == null) {
					if (powerGenerationParameters_ != null) {
						powerGenerationParameters_ =
								io.pravah.solar.production.SolarProduction.PowerGenerationParameters.newBuilder(powerGenerationParameters_).mergeFrom(value).buildPartial();
					} else {
						powerGenerationParameters_ = value;
					}
					onChanged();
				} else {
					powerGenerationParametersBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public Builder clearPowerGenerationParameters() {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParameters_ = null;
					onChanged();
				} else {
					powerGenerationParameters_ = null;
					powerGenerationParametersBuilder_ = null;
				}

				return this;
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder getPowerGenerationParametersBuilder() {

				onChanged();
				return getPowerGenerationParametersFieldBuilder().getBuilder();
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder getPowerGenerationParametersOrBuilder() {
				if (powerGenerationParametersBuilder_ != null) {
					return powerGenerationParametersBuilder_.getMessageOrBuilder();
				} else {
					return powerGenerationParameters_ == null ?
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance() : powerGenerationParameters_;
				}
			}
			/**
			 * <code>.solar_production.PowerGenerationParameters powerGenerationParameters = 5;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder>
			getPowerGenerationParametersFieldBuilder() {
				if (powerGenerationParametersBuilder_ == null) {
					powerGenerationParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder, io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder>(
							getPowerGenerationParameters(),
							getParentForChildren(),
							isClean());
					powerGenerationParameters_ = null;
				}
				return powerGenerationParametersBuilder_;
			}

			private io.pravah.solar.production.SolarProduction.Info info_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder> infoBuilder_;
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public boolean hasInfo() {
				return infoBuilder_ != null || info_ != null;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Info getInfo() {
				if (infoBuilder_ == null) {
					return info_ == null ? io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
				} else {
					return infoBuilder_.getMessage();
				}
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public Builder setInfo(io.pravah.solar.production.SolarProduction.Info value) {
				if (infoBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					info_ = value;
					onChanged();
				} else {
					infoBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public Builder setInfo(
					io.pravah.solar.production.SolarProduction.Info.Builder builderForValue) {
				if (infoBuilder_ == null) {
					info_ = builderForValue.build();
					onChanged();
				} else {
					infoBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public Builder mergeInfo(io.pravah.solar.production.SolarProduction.Info value) {
				if (infoBuilder_ == null) {
					if (info_ != null) {
						info_ =
								io.pravah.solar.production.SolarProduction.Info.newBuilder(info_).mergeFrom(value).buildPartial();
					} else {
						info_ = value;
					}
					onChanged();
				} else {
					infoBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public Builder clearInfo() {
				if (infoBuilder_ == null) {
					info_ = null;
					onChanged();
				} else {
					info_ = null;
					infoBuilder_ = null;
				}

				return this;
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Info.Builder getInfoBuilder() {

				onChanged();
				return getInfoFieldBuilder().getBuilder();
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			public io.pravah.solar.production.SolarProduction.InfoOrBuilder getInfoOrBuilder() {
				if (infoBuilder_ != null) {
					return infoBuilder_.getMessageOrBuilder();
				} else {
					return info_ == null ?
							io.pravah.solar.production.SolarProduction.Info.getDefaultInstance() : info_;
				}
			}
			/**
			 * <pre>
			 * Metadata
			 * </pre>
			 *
			 * <code>.solar_production.Info info = 6;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder>
			getInfoFieldBuilder() {
				if (infoBuilder_ == null) {
					infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Info, io.pravah.solar.production.SolarProduction.Info.Builder, io.pravah.solar.production.SolarProduction.InfoOrBuilder>(
							getInfo(),
							getParentForChildren(),
							isClean());
					info_ = null;
				}
				return infoBuilder_;
			}

			private long timestamp_ ;
			/**
			 * <pre>
			 * timestamp when this measure was taken by the instrument.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 7;</code>
			 */
			public long getTimestamp() {
				return timestamp_;
			}
			/**
			 * <pre>
			 * timestamp when this measure was taken by the instrument.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 7;</code>
			 */
			public Builder setTimestamp(long value) {

				timestamp_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * timestamp when this measure was taken by the instrument.
			 * </pre>
			 *
			 * <code>uint64 timestamp = 7;</code>
			 */
			public Builder clearTimestamp() {

				timestamp_ = 0L;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.Inverter)
		}

		// @@protoc_insertion_point(class_scope:solar_production.Inverter)
		private static final io.pravah.solar.production.SolarProduction.Inverter DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.Inverter();
		}

		public static io.pravah.solar.production.SolarProduction.Inverter getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<Inverter>
				PARSER = new com.google.protobuf.AbstractParser<Inverter>() {
			@java.lang.Override
			public Inverter parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new Inverter(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<Inverter> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<Inverter> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.Inverter getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface PowerGenerationParametersOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.PowerGenerationParameters)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * kW
		 * </pre>
		 *
		 * <code>float currentPowerOutput = 1;</code>
		 */
		float getCurrentPowerOutput();

		/**
		 * <pre>
		 * kWh
		 * </pre>
		 *
		 * <code>float powerGeneratedToday = 2;</code>
		 */
		float getPowerGeneratedToday();

		/**
		 * <pre>
		 * kW/m^2
		 * </pre>
		 *
		 * <code>float irradiation = 3;</code>
		 */
		float getIrradiation();

		/**
		 * <pre>
		 * m/s
		 * </pre>
		 *
		 * <code>float windspeed = 4;</code>
		 */
		float getWindspeed();

		/**
		 * <pre>
		 * °C
		 * </pre>
		 *
		 * <code>float moduleTemperature = 5;</code>
		 */
		float getModuleTemperature();
	}
	/**
	 * Protobuf type {@code solar_production.PowerGenerationParameters}
	 */
	public  static final class PowerGenerationParameters extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.PowerGenerationParameters)
			PowerGenerationParametersOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use PowerGenerationParameters.newBuilder() to construct.
		private PowerGenerationParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private PowerGenerationParameters() {
			currentPowerOutput_ = 0F;
			powerGeneratedToday_ = 0F;
			irradiation_ = 0F;
			windspeed_ = 0F;
			moduleTemperature_ = 0F;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private PowerGenerationParameters(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 13: {

							currentPowerOutput_ = input.readFloat();
							break;
						}
						case 21: {

							powerGeneratedToday_ = input.readFloat();
							break;
						}
						case 29: {

							irradiation_ = input.readFloat();
							break;
						}
						case 37: {

							windspeed_ = input.readFloat();
							break;
						}
						case 45: {

							moduleTemperature_ = input.readFloat();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PowerGenerationParameters_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PowerGenerationParameters_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.PowerGenerationParameters.class, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder.class);
		}

		public static final int CURRENTPOWEROUTPUT_FIELD_NUMBER = 1;
		private float currentPowerOutput_;
		/**
		 * <pre>
		 * kW
		 * </pre>
		 *
		 * <code>float currentPowerOutput = 1;</code>
		 */
		public float getCurrentPowerOutput() {
			return currentPowerOutput_;
		}

		public static final int POWERGENERATEDTODAY_FIELD_NUMBER = 2;
		private float powerGeneratedToday_;
		/**
		 * <pre>
		 * kWh
		 * </pre>
		 *
		 * <code>float powerGeneratedToday = 2;</code>
		 */
		public float getPowerGeneratedToday() {
			return powerGeneratedToday_;
		}

		public static final int IRRADIATION_FIELD_NUMBER = 3;
		private float irradiation_;
		/**
		 * <pre>
		 * kW/m^2
		 * </pre>
		 *
		 * <code>float irradiation = 3;</code>
		 */
		public float getIrradiation() {
			return irradiation_;
		}

		public static final int WINDSPEED_FIELD_NUMBER = 4;
		private float windspeed_;
		/**
		 * <pre>
		 * m/s
		 * </pre>
		 *
		 * <code>float windspeed = 4;</code>
		 */
		public float getWindspeed() {
			return windspeed_;
		}

		public static final int MODULETEMPERATURE_FIELD_NUMBER = 5;
		private float moduleTemperature_;
		/**
		 * <pre>
		 * °C
		 * </pre>
		 *
		 * <code>float moduleTemperature = 5;</code>
		 */
		public float getModuleTemperature() {
			return moduleTemperature_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (currentPowerOutput_ != 0F) {
				output.writeFloat(1, currentPowerOutput_);
			}
			if (powerGeneratedToday_ != 0F) {
				output.writeFloat(2, powerGeneratedToday_);
			}
			if (irradiation_ != 0F) {
				output.writeFloat(3, irradiation_);
			}
			if (windspeed_ != 0F) {
				output.writeFloat(4, windspeed_);
			}
			if (moduleTemperature_ != 0F) {
				output.writeFloat(5, moduleTemperature_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (currentPowerOutput_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(1, currentPowerOutput_);
			}
			if (powerGeneratedToday_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(2, powerGeneratedToday_);
			}
			if (irradiation_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(3, irradiation_);
			}
			if (windspeed_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(4, windspeed_);
			}
			if (moduleTemperature_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(5, moduleTemperature_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.PowerGenerationParameters)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.PowerGenerationParameters other = (io.pravah.solar.production.SolarProduction.PowerGenerationParameters) obj;

			boolean result = true;
			result = result && (
					java.lang.Float.floatToIntBits(getCurrentPowerOutput())
							== java.lang.Float.floatToIntBits(
							other.getCurrentPowerOutput()));
			result = result && (
					java.lang.Float.floatToIntBits(getPowerGeneratedToday())
							== java.lang.Float.floatToIntBits(
							other.getPowerGeneratedToday()));
			result = result && (
					java.lang.Float.floatToIntBits(getIrradiation())
							== java.lang.Float.floatToIntBits(
							other.getIrradiation()));
			result = result && (
					java.lang.Float.floatToIntBits(getWindspeed())
							== java.lang.Float.floatToIntBits(
							other.getWindspeed()));
			result = result && (
					java.lang.Float.floatToIntBits(getModuleTemperature())
							== java.lang.Float.floatToIntBits(
							other.getModuleTemperature()));
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + CURRENTPOWEROUTPUT_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getCurrentPowerOutput());
			hash = (37 * hash) + POWERGENERATEDTODAY_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getPowerGeneratedToday());
			hash = (37 * hash) + IRRADIATION_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getIrradiation());
			hash = (37 * hash) + WINDSPEED_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getWindspeed());
			hash = (37 * hash) + MODULETEMPERATURE_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getModuleTemperature());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.PowerGenerationParameters prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.PowerGenerationParameters}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.PowerGenerationParameters)
				io.pravah.solar.production.SolarProduction.PowerGenerationParametersOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PowerGenerationParameters_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PowerGenerationParameters_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.PowerGenerationParameters.class, io.pravah.solar.production.SolarProduction.PowerGenerationParameters.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.PowerGenerationParameters.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				currentPowerOutput_ = 0F;

				powerGeneratedToday_ = 0F;

				irradiation_ = 0F;

				windspeed_ = 0F;

				moduleTemperature_ = 0F;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PowerGenerationParameters_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters build() {
				io.pravah.solar.production.SolarProduction.PowerGenerationParameters result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PowerGenerationParameters buildPartial() {
				io.pravah.solar.production.SolarProduction.PowerGenerationParameters result = new io.pravah.solar.production.SolarProduction.PowerGenerationParameters(this);
				result.currentPowerOutput_ = currentPowerOutput_;
				result.powerGeneratedToday_ = powerGeneratedToday_;
				result.irradiation_ = irradiation_;
				result.windspeed_ = windspeed_;
				result.moduleTemperature_ = moduleTemperature_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.PowerGenerationParameters) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.PowerGenerationParameters)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.PowerGenerationParameters other) {
				if (other == io.pravah.solar.production.SolarProduction.PowerGenerationParameters.getDefaultInstance()) return this;
				if (other.getCurrentPowerOutput() != 0F) {
					setCurrentPowerOutput(other.getCurrentPowerOutput());
				}
				if (other.getPowerGeneratedToday() != 0F) {
					setPowerGeneratedToday(other.getPowerGeneratedToday());
				}
				if (other.getIrradiation() != 0F) {
					setIrradiation(other.getIrradiation());
				}
				if (other.getWindspeed() != 0F) {
					setWindspeed(other.getWindspeed());
				}
				if (other.getModuleTemperature() != 0F) {
					setModuleTemperature(other.getModuleTemperature());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.PowerGenerationParameters parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.PowerGenerationParameters) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private float currentPowerOutput_ ;
			/**
			 * <pre>
			 * kW
			 * </pre>
			 *
			 * <code>float currentPowerOutput = 1;</code>
			 */
			public float getCurrentPowerOutput() {
				return currentPowerOutput_;
			}
			/**
			 * <pre>
			 * kW
			 * </pre>
			 *
			 * <code>float currentPowerOutput = 1;</code>
			 */
			public Builder setCurrentPowerOutput(float value) {

				currentPowerOutput_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * kW
			 * </pre>
			 *
			 * <code>float currentPowerOutput = 1;</code>
			 */
			public Builder clearCurrentPowerOutput() {

				currentPowerOutput_ = 0F;
				onChanged();
				return this;
			}

			private float powerGeneratedToday_ ;
			/**
			 * <pre>
			 * kWh
			 * </pre>
			 *
			 * <code>float powerGeneratedToday = 2;</code>
			 */
			public float getPowerGeneratedToday() {
				return powerGeneratedToday_;
			}
			/**
			 * <pre>
			 * kWh
			 * </pre>
			 *
			 * <code>float powerGeneratedToday = 2;</code>
			 */
			public Builder setPowerGeneratedToday(float value) {

				powerGeneratedToday_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * kWh
			 * </pre>
			 *
			 * <code>float powerGeneratedToday = 2;</code>
			 */
			public Builder clearPowerGeneratedToday() {

				powerGeneratedToday_ = 0F;
				onChanged();
				return this;
			}

			private float irradiation_ ;
			/**
			 * <pre>
			 * kW/m^2
			 * </pre>
			 *
			 * <code>float irradiation = 3;</code>
			 */
			public float getIrradiation() {
				return irradiation_;
			}
			/**
			 * <pre>
			 * kW/m^2
			 * </pre>
			 *
			 * <code>float irradiation = 3;</code>
			 */
			public Builder setIrradiation(float value) {

				irradiation_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * kW/m^2
			 * </pre>
			 *
			 * <code>float irradiation = 3;</code>
			 */
			public Builder clearIrradiation() {

				irradiation_ = 0F;
				onChanged();
				return this;
			}

			private float windspeed_ ;
			/**
			 * <pre>
			 * m/s
			 * </pre>
			 *
			 * <code>float windspeed = 4;</code>
			 */
			public float getWindspeed() {
				return windspeed_;
			}
			/**
			 * <pre>
			 * m/s
			 * </pre>
			 *
			 * <code>float windspeed = 4;</code>
			 */
			public Builder setWindspeed(float value) {

				windspeed_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * m/s
			 * </pre>
			 *
			 * <code>float windspeed = 4;</code>
			 */
			public Builder clearWindspeed() {

				windspeed_ = 0F;
				onChanged();
				return this;
			}

			private float moduleTemperature_ ;
			/**
			 * <pre>
			 * °C
			 * </pre>
			 *
			 * <code>float moduleTemperature = 5;</code>
			 */
			public float getModuleTemperature() {
				return moduleTemperature_;
			}
			/**
			 * <pre>
			 * °C
			 * </pre>
			 *
			 * <code>float moduleTemperature = 5;</code>
			 */
			public Builder setModuleTemperature(float value) {

				moduleTemperature_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * °C
			 * </pre>
			 *
			 * <code>float moduleTemperature = 5;</code>
			 */
			public Builder clearModuleTemperature() {

				moduleTemperature_ = 0F;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.PowerGenerationParameters)
		}

		// @@protoc_insertion_point(class_scope:solar_production.PowerGenerationParameters)
		private static final io.pravah.solar.production.SolarProduction.PowerGenerationParameters DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.PowerGenerationParameters();
		}

		public static io.pravah.solar.production.SolarProduction.PowerGenerationParameters getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<PowerGenerationParameters>
				PARSER = new com.google.protobuf.AbstractParser<PowerGenerationParameters>() {
			@java.lang.Override
			public PowerGenerationParameters parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new PowerGenerationParameters(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<PowerGenerationParameters> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<PowerGenerationParameters> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.PowerGenerationParameters getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface InfoOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.Info)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * kWp (peak power)
		 * </pre>
		 *
		 * <code>double powerCapacity = 1;</code>
		 */
		double getPowerCapacity();

		/**
		 * <code>string name = 2;</code>
		 */
		java.lang.String getName();
		/**
		 * <code>string name = 2;</code>
		 */
		com.google.protobuf.ByteString
		getNameBytes();

		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		boolean hasLocation();
		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.Location getLocation();
		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		io.pravah.solar.production.SolarProduction.LocationOrBuilder getLocationOrBuilder();
	}
	/**
	 * Protobuf type {@code solar_production.Info}
	 */
	public  static final class Info extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.Info)
			InfoOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use Info.newBuilder() to construct.
		private Info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private Info() {
			powerCapacity_ = 0D;
			name_ = "";
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private Info(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 9: {

							powerCapacity_ = input.readDouble();
							break;
						}
						case 18: {
							java.lang.String s = input.readStringRequireUtf8();

							name_ = s;
							break;
						}
						case 26: {
							io.pravah.solar.production.SolarProduction.Location.Builder subBuilder = null;
							if (location_ != null) {
								subBuilder = location_.toBuilder();
							}
							location_ = input.readMessage(io.pravah.solar.production.SolarProduction.Location.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(location_);
								location_ = subBuilder.buildPartial();
							}

							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Info_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Info_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.Info.class, io.pravah.solar.production.SolarProduction.Info.Builder.class);
		}

		public static final int POWERCAPACITY_FIELD_NUMBER = 1;
		private double powerCapacity_;
		/**
		 * <pre>
		 * kWp (peak power)
		 * </pre>
		 *
		 * <code>double powerCapacity = 1;</code>
		 */
		public double getPowerCapacity() {
			return powerCapacity_;
		}

		public static final int NAME_FIELD_NUMBER = 2;
		private volatile java.lang.Object name_;
		/**
		 * <code>string name = 2;</code>
		 */
		public java.lang.String getName() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				name_ = s;
				return s;
			}
		}
		/**
		 * <code>string name = 2;</code>
		 */
		public com.google.protobuf.ByteString
		getNameBytes() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				name_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int LOCATION_FIELD_NUMBER = 3;
		private io.pravah.solar.production.SolarProduction.Location location_;
		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		public boolean hasLocation() {
			return location_ != null;
		}
		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Location getLocation() {
			return location_ == null ? io.pravah.solar.production.SolarProduction.Location.getDefaultInstance() : location_;
		}
		/**
		 * <code>.solar_production.Location location = 3;</code>
		 */
		public io.pravah.solar.production.SolarProduction.LocationOrBuilder getLocationOrBuilder() {
			return getLocation();
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (powerCapacity_ != 0D) {
				output.writeDouble(1, powerCapacity_);
			}
			if (!getNameBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
			}
			if (location_ != null) {
				output.writeMessage(3, getLocation());
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (powerCapacity_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(1, powerCapacity_);
			}
			if (!getNameBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
			}
			if (location_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(3, getLocation());
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.Info)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.Info other = (io.pravah.solar.production.SolarProduction.Info) obj;

			boolean result = true;
			result = result && (
					java.lang.Double.doubleToLongBits(getPowerCapacity())
							== java.lang.Double.doubleToLongBits(
							other.getPowerCapacity()));
			result = result && getName()
					.equals(other.getName());
			result = result && (hasLocation() == other.hasLocation());
			if (hasLocation()) {
				result = result && getLocation()
						.equals(other.getLocation());
			}
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + POWERCAPACITY_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getPowerCapacity()));
			hash = (37 * hash) + NAME_FIELD_NUMBER;
			hash = (53 * hash) + getName().hashCode();
			if (hasLocation()) {
				hash = (37 * hash) + LOCATION_FIELD_NUMBER;
				hash = (53 * hash) + getLocation().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Info parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.Info prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.Info}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.Info)
				io.pravah.solar.production.SolarProduction.InfoOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Info_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Info_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.Info.class, io.pravah.solar.production.SolarProduction.Info.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.Info.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				powerCapacity_ = 0D;

				name_ = "";

				if (locationBuilder_ == null) {
					location_ = null;
				} else {
					location_ = null;
					locationBuilder_ = null;
				}
				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Info_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Info getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.Info.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Info build() {
				io.pravah.solar.production.SolarProduction.Info result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Info buildPartial() {
				io.pravah.solar.production.SolarProduction.Info result = new io.pravah.solar.production.SolarProduction.Info(this);
				result.powerCapacity_ = powerCapacity_;
				result.name_ = name_;
				if (locationBuilder_ == null) {
					result.location_ = location_;
				} else {
					result.location_ = locationBuilder_.build();
				}
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.Info) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.Info)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.Info other) {
				if (other == io.pravah.solar.production.SolarProduction.Info.getDefaultInstance()) return this;
				if (other.getPowerCapacity() != 0D) {
					setPowerCapacity(other.getPowerCapacity());
				}
				if (!other.getName().isEmpty()) {
					name_ = other.name_;
					onChanged();
				}
				if (other.hasLocation()) {
					mergeLocation(other.getLocation());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.Info parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.Info) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private double powerCapacity_ ;
			/**
			 * <pre>
			 * kWp (peak power)
			 * </pre>
			 *
			 * <code>double powerCapacity = 1;</code>
			 */
			public double getPowerCapacity() {
				return powerCapacity_;
			}
			/**
			 * <pre>
			 * kWp (peak power)
			 * </pre>
			 *
			 * <code>double powerCapacity = 1;</code>
			 */
			public Builder setPowerCapacity(double value) {

				powerCapacity_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * kWp (peak power)
			 * </pre>
			 *
			 * <code>double powerCapacity = 1;</code>
			 */
			public Builder clearPowerCapacity() {

				powerCapacity_ = 0D;
				onChanged();
				return this;
			}

			private java.lang.Object name_ = "";
			/**
			 * <code>string name = 2;</code>
			 */
			public java.lang.String getName() {
				java.lang.Object ref = name_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					name_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <code>string name = 2;</code>
			 */
			public com.google.protobuf.ByteString
			getNameBytes() {
				java.lang.Object ref = name_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					name_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <code>string name = 2;</code>
			 */
			public Builder setName(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				name_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>string name = 2;</code>
			 */
			public Builder clearName() {

				name_ = getDefaultInstance().getName();
				onChanged();
				return this;
			}
			/**
			 * <code>string name = 2;</code>
			 */
			public Builder setNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				name_ = value;
				onChanged();
				return this;
			}

			private io.pravah.solar.production.SolarProduction.Location location_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Location, io.pravah.solar.production.SolarProduction.Location.Builder, io.pravah.solar.production.SolarProduction.LocationOrBuilder> locationBuilder_;
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public boolean hasLocation() {
				return locationBuilder_ != null || location_ != null;
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Location getLocation() {
				if (locationBuilder_ == null) {
					return location_ == null ? io.pravah.solar.production.SolarProduction.Location.getDefaultInstance() : location_;
				} else {
					return locationBuilder_.getMessage();
				}
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public Builder setLocation(io.pravah.solar.production.SolarProduction.Location value) {
				if (locationBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					location_ = value;
					onChanged();
				} else {
					locationBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public Builder setLocation(
					io.pravah.solar.production.SolarProduction.Location.Builder builderForValue) {
				if (locationBuilder_ == null) {
					location_ = builderForValue.build();
					onChanged();
				} else {
					locationBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public Builder mergeLocation(io.pravah.solar.production.SolarProduction.Location value) {
				if (locationBuilder_ == null) {
					if (location_ != null) {
						location_ =
								io.pravah.solar.production.SolarProduction.Location.newBuilder(location_).mergeFrom(value).buildPartial();
					} else {
						location_ = value;
					}
					onChanged();
				} else {
					locationBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public Builder clearLocation() {
				if (locationBuilder_ == null) {
					location_ = null;
					onChanged();
				} else {
					location_ = null;
					locationBuilder_ = null;
				}

				return this;
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Location.Builder getLocationBuilder() {

				onChanged();
				return getLocationFieldBuilder().getBuilder();
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			public io.pravah.solar.production.SolarProduction.LocationOrBuilder getLocationOrBuilder() {
				if (locationBuilder_ != null) {
					return locationBuilder_.getMessageOrBuilder();
				} else {
					return location_ == null ?
							io.pravah.solar.production.SolarProduction.Location.getDefaultInstance() : location_;
				}
			}
			/**
			 * <code>.solar_production.Location location = 3;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.Location, io.pravah.solar.production.SolarProduction.Location.Builder, io.pravah.solar.production.SolarProduction.LocationOrBuilder>
			getLocationFieldBuilder() {
				if (locationBuilder_ == null) {
					locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.Location, io.pravah.solar.production.SolarProduction.Location.Builder, io.pravah.solar.production.SolarProduction.LocationOrBuilder>(
							getLocation(),
							getParentForChildren(),
							isClean());
					location_ = null;
				}
				return locationBuilder_;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.Info)
		}

		// @@protoc_insertion_point(class_scope:solar_production.Info)
		private static final io.pravah.solar.production.SolarProduction.Info DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.Info();
		}

		public static io.pravah.solar.production.SolarProduction.Info getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<Info>
				PARSER = new com.google.protobuf.AbstractParser<Info>() {
			@java.lang.Override
			public Info parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new Info(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<Info> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<Info> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.Info getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface PhaseComponentsOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.PhaseComponents)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		boolean hasElectricComponents();
		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents();
		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder();

		/**
		 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
		 */
		int getPhaseValue();
		/**
		 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
		 */
		io.pravah.solar.production.SolarProduction.PhaseComponents.Phase getPhase();
	}
	/**
	 * Protobuf type {@code solar_production.PhaseComponents}
	 */
	public  static final class PhaseComponents extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.PhaseComponents)
			PhaseComponentsOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use PhaseComponents.newBuilder() to construct.
		private PhaseComponents(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private PhaseComponents() {
			phase_ = 0;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private PhaseComponents(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							io.pravah.solar.production.SolarProduction.ElectricComponents.Builder subBuilder = null;
							if (electricComponents_ != null) {
								subBuilder = electricComponents_.toBuilder();
							}
							electricComponents_ = input.readMessage(io.pravah.solar.production.SolarProduction.ElectricComponents.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(electricComponents_);
								electricComponents_ = subBuilder.buildPartial();
							}

							break;
						}
						case 16: {
							int rawValue = input.readEnum();

							phase_ = rawValue;
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PhaseComponents_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PhaseComponents_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.PhaseComponents.class, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder.class);
		}

		/**
		 * Protobuf enum {@code solar_production.PhaseComponents.Phase}
		 */
		public enum Phase
				implements com.google.protobuf.ProtocolMessageEnum {
			/**
			 * <code>B = 0;</code>
			 */
			B(0),
			/**
			 * <code>R = 1;</code>
			 */
			R(1),
			/**
			 * <code>Y = 2;</code>
			 */
			Y(2),
			UNRECOGNIZED(-1),
			;

			/**
			 * <code>B = 0;</code>
			 */
			public static final int B_VALUE = 0;
			/**
			 * <code>R = 1;</code>
			 */
			public static final int R_VALUE = 1;
			/**
			 * <code>Y = 2;</code>
			 */
			public static final int Y_VALUE = 2;


			public final int getNumber() {
				if (this == UNRECOGNIZED) {
					throw new java.lang.IllegalArgumentException(
							"Can't get the number of an unknown enum value.");
				}
				return value;
			}

			/**
			 * @deprecated Use {@link #forNumber(int)} instead.
			 */
			@java.lang.Deprecated
			public static Phase valueOf(int value) {
				return forNumber(value);
			}

			public static Phase forNumber(int value) {
				switch (value) {
					case 0: return B;
					case 1: return R;
					case 2: return Y;
					default: return null;
				}
			}

			public static com.google.protobuf.Internal.EnumLiteMap<Phase>
			internalGetValueMap() {
				return internalValueMap;
			}
			private static final com.google.protobuf.Internal.EnumLiteMap<
					Phase> internalValueMap =
					new com.google.protobuf.Internal.EnumLiteMap<Phase>() {
						public Phase findValueByNumber(int number) {
							return Phase.forNumber(number);
						}
					};

			public final com.google.protobuf.Descriptors.EnumValueDescriptor
			getValueDescriptor() {
				return getDescriptor().getValues().get(ordinal());
			}
			public final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptorForType() {
				return getDescriptor();
			}
			public static final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.PhaseComponents.getDescriptor().getEnumTypes().get(0);
			}

			private static final Phase[] VALUES = values();

			public static Phase valueOf(
					com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
				if (desc.getType() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException(
							"EnumValueDescriptor is not for this type.");
				}
				if (desc.getIndex() == -1) {
					return UNRECOGNIZED;
				}
				return VALUES[desc.getIndex()];
			}

			private final int value;

			private Phase(int value) {
				this.value = value;
			}

			// @@protoc_insertion_point(enum_scope:solar_production.PhaseComponents.Phase)
		}

		public static final int ELECTRICCOMPONENTS_FIELD_NUMBER = 1;
		private io.pravah.solar.production.SolarProduction.ElectricComponents electricComponents_;
		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public boolean hasElectricComponents() {
			return electricComponents_ != null;
		}
		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents() {
			return electricComponents_ == null ? io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
		}
		/**
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder() {
			return getElectricComponents();
		}

		public static final int PHASE_FIELD_NUMBER = 2;
		private int phase_;
		/**
		 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
		 */
		public int getPhaseValue() {
			return phase_;
		}
		/**
		 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
		 */
		public io.pravah.solar.production.SolarProduction.PhaseComponents.Phase getPhase() {
			@SuppressWarnings("deprecation")
			io.pravah.solar.production.SolarProduction.PhaseComponents.Phase result = io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.valueOf(phase_);
			return result == null ? io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.UNRECOGNIZED : result;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (electricComponents_ != null) {
				output.writeMessage(1, getElectricComponents());
			}
			if (phase_ != io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.B.getNumber()) {
				output.writeEnum(2, phase_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (electricComponents_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(1, getElectricComponents());
			}
			if (phase_ != io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.B.getNumber()) {
				size += com.google.protobuf.CodedOutputStream
						.computeEnumSize(2, phase_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.PhaseComponents)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.PhaseComponents other = (io.pravah.solar.production.SolarProduction.PhaseComponents) obj;

			boolean result = true;
			result = result && (hasElectricComponents() == other.hasElectricComponents());
			if (hasElectricComponents()) {
				result = result && getElectricComponents()
						.equals(other.getElectricComponents());
			}
			result = result && phase_ == other.phase_;
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasElectricComponents()) {
				hash = (37 * hash) + ELECTRICCOMPONENTS_FIELD_NUMBER;
				hash = (53 * hash) + getElectricComponents().hashCode();
			}
			hash = (37 * hash) + PHASE_FIELD_NUMBER;
			hash = (53 * hash) + phase_;
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.PhaseComponents parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.PhaseComponents prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.PhaseComponents}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.PhaseComponents)
				io.pravah.solar.production.SolarProduction.PhaseComponentsOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PhaseComponents_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PhaseComponents_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.PhaseComponents.class, io.pravah.solar.production.SolarProduction.PhaseComponents.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.PhaseComponents.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = null;
				} else {
					electricComponents_ = null;
					electricComponentsBuilder_ = null;
				}
				phase_ = 0;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_PhaseComponents_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PhaseComponents getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.PhaseComponents.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PhaseComponents build() {
				io.pravah.solar.production.SolarProduction.PhaseComponents result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.PhaseComponents buildPartial() {
				io.pravah.solar.production.SolarProduction.PhaseComponents result = new io.pravah.solar.production.SolarProduction.PhaseComponents(this);
				if (electricComponentsBuilder_ == null) {
					result.electricComponents_ = electricComponents_;
				} else {
					result.electricComponents_ = electricComponentsBuilder_.build();
				}
				result.phase_ = phase_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.PhaseComponents) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.PhaseComponents)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.PhaseComponents other) {
				if (other == io.pravah.solar.production.SolarProduction.PhaseComponents.getDefaultInstance()) return this;
				if (other.hasElectricComponents()) {
					mergeElectricComponents(other.getElectricComponents());
				}
				if (other.phase_ != 0) {
					setPhaseValue(other.getPhaseValue());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.PhaseComponents parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.PhaseComponents) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private io.pravah.solar.production.SolarProduction.ElectricComponents electricComponents_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder> electricComponentsBuilder_;
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public boolean hasElectricComponents() {
				return electricComponentsBuilder_ != null || electricComponents_ != null;
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents() {
				if (electricComponentsBuilder_ == null) {
					return electricComponents_ == null ? io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
				} else {
					return electricComponentsBuilder_.getMessage();
				}
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder setElectricComponents(io.pravah.solar.production.SolarProduction.ElectricComponents value) {
				if (electricComponentsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					electricComponents_ = value;
					onChanged();
				} else {
					electricComponentsBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder setElectricComponents(
					io.pravah.solar.production.SolarProduction.ElectricComponents.Builder builderForValue) {
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = builderForValue.build();
					onChanged();
				} else {
					electricComponentsBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder mergeElectricComponents(io.pravah.solar.production.SolarProduction.ElectricComponents value) {
				if (electricComponentsBuilder_ == null) {
					if (electricComponents_ != null) {
						electricComponents_ =
								io.pravah.solar.production.SolarProduction.ElectricComponents.newBuilder(electricComponents_).mergeFrom(value).buildPartial();
					} else {
						electricComponents_ = value;
					}
					onChanged();
				} else {
					electricComponentsBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder clearElectricComponents() {
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = null;
					onChanged();
				} else {
					electricComponents_ = null;
					electricComponentsBuilder_ = null;
				}

				return this;
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponents.Builder getElectricComponentsBuilder() {

				onChanged();
				return getElectricComponentsFieldBuilder().getBuilder();
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder() {
				if (electricComponentsBuilder_ != null) {
					return electricComponentsBuilder_.getMessageOrBuilder();
				} else {
					return electricComponents_ == null ?
							io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
				}
			}
			/**
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder>
			getElectricComponentsFieldBuilder() {
				if (electricComponentsBuilder_ == null) {
					electricComponentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder>(
							getElectricComponents(),
							getParentForChildren(),
							isClean());
					electricComponents_ = null;
				}
				return electricComponentsBuilder_;
			}

			private int phase_ = 0;
			/**
			 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
			 */
			public int getPhaseValue() {
				return phase_;
			}
			/**
			 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
			 */
			public Builder setPhaseValue(int value) {
				phase_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
			 */
			public io.pravah.solar.production.SolarProduction.PhaseComponents.Phase getPhase() {
				@SuppressWarnings("deprecation")
				io.pravah.solar.production.SolarProduction.PhaseComponents.Phase result = io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.valueOf(phase_);
				return result == null ? io.pravah.solar.production.SolarProduction.PhaseComponents.Phase.UNRECOGNIZED : result;
			}
			/**
			 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
			 */
			public Builder setPhase(io.pravah.solar.production.SolarProduction.PhaseComponents.Phase value) {
				if (value == null) {
					throw new NullPointerException();
				}

				phase_ = value.getNumber();
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.PhaseComponents.Phase phase = 2;</code>
			 */
			public Builder clearPhase() {

				phase_ = 0;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.PhaseComponents)
		}

		// @@protoc_insertion_point(class_scope:solar_production.PhaseComponents)
		private static final io.pravah.solar.production.SolarProduction.PhaseComponents DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.PhaseComponents();
		}

		public static io.pravah.solar.production.SolarProduction.PhaseComponents getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<PhaseComponents>
				PARSER = new com.google.protobuf.AbstractParser<PhaseComponents>() {
			@java.lang.Override
			public PhaseComponents parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new PhaseComponents(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<PhaseComponents> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<PhaseComponents> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.PhaseComponents getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface SolarPanelGroupOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.SolarPanelGroup)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		boolean hasElectricComponents();
		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents();
		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder();

		/**
		 * <pre>
		 * Number of panels in this group.
		 * </pre>
		 *
		 * <code>uint32 panelCount = 2;</code>
		 */
		int getPanelCount();

		/**
		 * <code>float averageGroupModuleTemp = 3;</code>
		 */
		float getAverageGroupModuleTemp();
	}
	/**
	 * Protobuf type {@code solar_production.SolarPanelGroup}
	 */
	public  static final class SolarPanelGroup extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.SolarPanelGroup)
			SolarPanelGroupOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use SolarPanelGroup.newBuilder() to construct.
		private SolarPanelGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private SolarPanelGroup() {
			panelCount_ = 0;
			averageGroupModuleTemp_ = 0F;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private SolarPanelGroup(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							io.pravah.solar.production.SolarProduction.ElectricComponents.Builder subBuilder = null;
							if (electricComponents_ != null) {
								subBuilder = electricComponents_.toBuilder();
							}
							electricComponents_ = input.readMessage(io.pravah.solar.production.SolarProduction.ElectricComponents.parser(), extensionRegistry);
							if (subBuilder != null) {
								subBuilder.mergeFrom(electricComponents_);
								electricComponents_ = subBuilder.buildPartial();
							}

							break;
						}
						case 16: {

							panelCount_ = input.readUInt32();
							break;
						}
						case 29: {

							averageGroupModuleTemp_ = input.readFloat();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_SolarPanelGroup_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_SolarPanelGroup_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.SolarPanelGroup.class, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder.class);
		}

		public static final int ELECTRICCOMPONENTS_FIELD_NUMBER = 1;
		private io.pravah.solar.production.SolarProduction.ElectricComponents electricComponents_;
		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public boolean hasElectricComponents() {
			return electricComponents_ != null;
		}
		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents() {
			return electricComponents_ == null ? io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
		}
		/**
		 * <pre>
		 * Output from all standard solar panel is expected to be DC.
		 * </pre>
		 *
		 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder() {
			return getElectricComponents();
		}

		public static final int PANELCOUNT_FIELD_NUMBER = 2;
		private int panelCount_;
		/**
		 * <pre>
		 * Number of panels in this group.
		 * </pre>
		 *
		 * <code>uint32 panelCount = 2;</code>
		 */
		public int getPanelCount() {
			return panelCount_;
		}

		public static final int AVERAGEGROUPMODULETEMP_FIELD_NUMBER = 3;
		private float averageGroupModuleTemp_;
		/**
		 * <code>float averageGroupModuleTemp = 3;</code>
		 */
		public float getAverageGroupModuleTemp() {
			return averageGroupModuleTemp_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (electricComponents_ != null) {
				output.writeMessage(1, getElectricComponents());
			}
			if (panelCount_ != 0) {
				output.writeUInt32(2, panelCount_);
			}
			if (averageGroupModuleTemp_ != 0F) {
				output.writeFloat(3, averageGroupModuleTemp_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (electricComponents_ != null) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(1, getElectricComponents());
			}
			if (panelCount_ != 0) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt32Size(2, panelCount_);
			}
			if (averageGroupModuleTemp_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(3, averageGroupModuleTemp_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.SolarPanelGroup)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.SolarPanelGroup other = (io.pravah.solar.production.SolarProduction.SolarPanelGroup) obj;

			boolean result = true;
			result = result && (hasElectricComponents() == other.hasElectricComponents());
			if (hasElectricComponents()) {
				result = result && getElectricComponents()
						.equals(other.getElectricComponents());
			}
			result = result && (getPanelCount()
					== other.getPanelCount());
			result = result && (
					java.lang.Float.floatToIntBits(getAverageGroupModuleTemp())
							== java.lang.Float.floatToIntBits(
							other.getAverageGroupModuleTemp()));
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasElectricComponents()) {
				hash = (37 * hash) + ELECTRICCOMPONENTS_FIELD_NUMBER;
				hash = (53 * hash) + getElectricComponents().hashCode();
			}
			hash = (37 * hash) + PANELCOUNT_FIELD_NUMBER;
			hash = (53 * hash) + getPanelCount();
			hash = (37 * hash) + AVERAGEGROUPMODULETEMP_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getAverageGroupModuleTemp());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.SolarPanelGroup prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.SolarPanelGroup}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.SolarPanelGroup)
				io.pravah.solar.production.SolarProduction.SolarPanelGroupOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_SolarPanelGroup_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_SolarPanelGroup_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.SolarPanelGroup.class, io.pravah.solar.production.SolarProduction.SolarPanelGroup.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.SolarPanelGroup.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = null;
				} else {
					electricComponents_ = null;
					electricComponentsBuilder_ = null;
				}
				panelCount_ = 0;

				averageGroupModuleTemp_ = 0F;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_SolarPanelGroup_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.SolarPanelGroup.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup build() {
				io.pravah.solar.production.SolarProduction.SolarPanelGroup result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.SolarPanelGroup buildPartial() {
				io.pravah.solar.production.SolarProduction.SolarPanelGroup result = new io.pravah.solar.production.SolarProduction.SolarPanelGroup(this);
				if (electricComponentsBuilder_ == null) {
					result.electricComponents_ = electricComponents_;
				} else {
					result.electricComponents_ = electricComponentsBuilder_.build();
				}
				result.panelCount_ = panelCount_;
				result.averageGroupModuleTemp_ = averageGroupModuleTemp_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.SolarPanelGroup) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.SolarPanelGroup)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.SolarPanelGroup other) {
				if (other == io.pravah.solar.production.SolarProduction.SolarPanelGroup.getDefaultInstance()) return this;
				if (other.hasElectricComponents()) {
					mergeElectricComponents(other.getElectricComponents());
				}
				if (other.getPanelCount() != 0) {
					setPanelCount(other.getPanelCount());
				}
				if (other.getAverageGroupModuleTemp() != 0F) {
					setAverageGroupModuleTemp(other.getAverageGroupModuleTemp());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.SolarPanelGroup parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.SolarPanelGroup) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private io.pravah.solar.production.SolarProduction.ElectricComponents electricComponents_ = null;
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder> electricComponentsBuilder_;
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public boolean hasElectricComponents() {
				return electricComponentsBuilder_ != null || electricComponents_ != null;
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponents getElectricComponents() {
				if (electricComponentsBuilder_ == null) {
					return electricComponents_ == null ? io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
				} else {
					return electricComponentsBuilder_.getMessage();
				}
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder setElectricComponents(io.pravah.solar.production.SolarProduction.ElectricComponents value) {
				if (electricComponentsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					electricComponents_ = value;
					onChanged();
				} else {
					electricComponentsBuilder_.setMessage(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder setElectricComponents(
					io.pravah.solar.production.SolarProduction.ElectricComponents.Builder builderForValue) {
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = builderForValue.build();
					onChanged();
				} else {
					electricComponentsBuilder_.setMessage(builderForValue.build());
				}

				return this;
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder mergeElectricComponents(io.pravah.solar.production.SolarProduction.ElectricComponents value) {
				if (electricComponentsBuilder_ == null) {
					if (electricComponents_ != null) {
						electricComponents_ =
								io.pravah.solar.production.SolarProduction.ElectricComponents.newBuilder(electricComponents_).mergeFrom(value).buildPartial();
					} else {
						electricComponents_ = value;
					}
					onChanged();
				} else {
					electricComponentsBuilder_.mergeFrom(value);
				}

				return this;
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public Builder clearElectricComponents() {
				if (electricComponentsBuilder_ == null) {
					electricComponents_ = null;
					onChanged();
				} else {
					electricComponents_ = null;
					electricComponentsBuilder_ = null;
				}

				return this;
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponents.Builder getElectricComponentsBuilder() {

				onChanged();
				return getElectricComponentsFieldBuilder().getBuilder();
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder getElectricComponentsOrBuilder() {
				if (electricComponentsBuilder_ != null) {
					return electricComponentsBuilder_.getMessageOrBuilder();
				} else {
					return electricComponents_ == null ?
							io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance() : electricComponents_;
				}
			}
			/**
			 * <pre>
			 * Output from all standard solar panel is expected to be DC.
			 * </pre>
			 *
			 * <code>.solar_production.ElectricComponents electricComponents = 1;</code>
			 */
			private com.google.protobuf.SingleFieldBuilderV3<
					io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder>
			getElectricComponentsFieldBuilder() {
				if (electricComponentsBuilder_ == null) {
					electricComponentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
							io.pravah.solar.production.SolarProduction.ElectricComponents, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder, io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder>(
							getElectricComponents(),
							getParentForChildren(),
							isClean());
					electricComponents_ = null;
				}
				return electricComponentsBuilder_;
			}

			private int panelCount_ ;
			/**
			 * <pre>
			 * Number of panels in this group.
			 * </pre>
			 *
			 * <code>uint32 panelCount = 2;</code>
			 */
			public int getPanelCount() {
				return panelCount_;
			}
			/**
			 * <pre>
			 * Number of panels in this group.
			 * </pre>
			 *
			 * <code>uint32 panelCount = 2;</code>
			 */
			public Builder setPanelCount(int value) {

				panelCount_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Number of panels in this group.
			 * </pre>
			 *
			 * <code>uint32 panelCount = 2;</code>
			 */
			public Builder clearPanelCount() {

				panelCount_ = 0;
				onChanged();
				return this;
			}

			private float averageGroupModuleTemp_ ;
			/**
			 * <code>float averageGroupModuleTemp = 3;</code>
			 */
			public float getAverageGroupModuleTemp() {
				return averageGroupModuleTemp_;
			}
			/**
			 * <code>float averageGroupModuleTemp = 3;</code>
			 */
			public Builder setAverageGroupModuleTemp(float value) {

				averageGroupModuleTemp_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>float averageGroupModuleTemp = 3;</code>
			 */
			public Builder clearAverageGroupModuleTemp() {

				averageGroupModuleTemp_ = 0F;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.SolarPanelGroup)
		}

		// @@protoc_insertion_point(class_scope:solar_production.SolarPanelGroup)
		private static final io.pravah.solar.production.SolarProduction.SolarPanelGroup DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.SolarPanelGroup();
		}

		public static io.pravah.solar.production.SolarProduction.SolarPanelGroup getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<SolarPanelGroup>
				PARSER = new com.google.protobuf.AbstractParser<SolarPanelGroup>() {
			@java.lang.Override
			public SolarPanelGroup parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new SolarPanelGroup(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<SolarPanelGroup> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<SolarPanelGroup> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.SolarPanelGroup getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface ElectricComponentsOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.ElectricComponents)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <pre>
		 * Watt (W)
		 * </pre>
		 *
		 * <code>double power = 1;</code>
		 */
		double getPower();

		/**
		 * <pre>
		 * Volt (V)
		 * </pre>
		 *
		 * <code>double voltage = 2;</code>
		 */
		double getVoltage();

		/**
		 * <pre>
		 * Ampere (A)
		 * </pre>
		 *
		 * <code>double current = 3;</code>
		 */
		double getCurrent();

		/**
		 * <pre>
		 * Hertz (Hz) - Will be missing for DC.
		 * </pre>
		 *
		 * <code>double frequency = 4;</code>
		 */
		double getFrequency();
	}
	/**
	 * Protobuf type {@code solar_production.ElectricComponents}
	 */
	public  static final class ElectricComponents extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.ElectricComponents)
			ElectricComponentsOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use ElectricComponents.newBuilder() to construct.
		private ElectricComponents(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private ElectricComponents() {
			power_ = 0D;
			voltage_ = 0D;
			current_ = 0D;
			frequency_ = 0D;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private ElectricComponents(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 9: {

							power_ = input.readDouble();
							break;
						}
						case 17: {

							voltage_ = input.readDouble();
							break;
						}
						case 25: {

							current_ = input.readDouble();
							break;
						}
						case 33: {

							frequency_ = input.readDouble();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_ElectricComponents_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_ElectricComponents_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.ElectricComponents.class, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder.class);
		}

		public static final int POWER_FIELD_NUMBER = 1;
		private double power_;
		/**
		 * <pre>
		 * Watt (W)
		 * </pre>
		 *
		 * <code>double power = 1;</code>
		 */
		public double getPower() {
			return power_;
		}

		public static final int VOLTAGE_FIELD_NUMBER = 2;
		private double voltage_;
		/**
		 * <pre>
		 * Volt (V)
		 * </pre>
		 *
		 * <code>double voltage = 2;</code>
		 */
		public double getVoltage() {
			return voltage_;
		}

		public static final int CURRENT_FIELD_NUMBER = 3;
		private double current_;
		/**
		 * <pre>
		 * Ampere (A)
		 * </pre>
		 *
		 * <code>double current = 3;</code>
		 */
		public double getCurrent() {
			return current_;
		}

		public static final int FREQUENCY_FIELD_NUMBER = 4;
		private double frequency_;
		/**
		 * <pre>
		 * Hertz (Hz) - Will be missing for DC.
		 * </pre>
		 *
		 * <code>double frequency = 4;</code>
		 */
		public double getFrequency() {
			return frequency_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (power_ != 0D) {
				output.writeDouble(1, power_);
			}
			if (voltage_ != 0D) {
				output.writeDouble(2, voltage_);
			}
			if (current_ != 0D) {
				output.writeDouble(3, current_);
			}
			if (frequency_ != 0D) {
				output.writeDouble(4, frequency_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (power_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(1, power_);
			}
			if (voltage_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(2, voltage_);
			}
			if (current_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(3, current_);
			}
			if (frequency_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(4, frequency_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.ElectricComponents)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.ElectricComponents other = (io.pravah.solar.production.SolarProduction.ElectricComponents) obj;

			boolean result = true;
			result = result && (
					java.lang.Double.doubleToLongBits(getPower())
							== java.lang.Double.doubleToLongBits(
							other.getPower()));
			result = result && (
					java.lang.Double.doubleToLongBits(getVoltage())
							== java.lang.Double.doubleToLongBits(
							other.getVoltage()));
			result = result && (
					java.lang.Double.doubleToLongBits(getCurrent())
							== java.lang.Double.doubleToLongBits(
							other.getCurrent()));
			result = result && (
					java.lang.Double.doubleToLongBits(getFrequency())
							== java.lang.Double.doubleToLongBits(
							other.getFrequency()));
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + POWER_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getPower()));
			hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getVoltage()));
			hash = (37 * hash) + CURRENT_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getCurrent()));
			hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getFrequency()));
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.ElectricComponents parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.ElectricComponents prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.ElectricComponents}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.ElectricComponents)
				io.pravah.solar.production.SolarProduction.ElectricComponentsOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_ElectricComponents_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_ElectricComponents_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.ElectricComponents.class, io.pravah.solar.production.SolarProduction.ElectricComponents.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.ElectricComponents.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				power_ = 0D;

				voltage_ = 0D;

				current_ = 0D;

				frequency_ = 0D;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_ElectricComponents_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.ElectricComponents getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.ElectricComponents build() {
				io.pravah.solar.production.SolarProduction.ElectricComponents result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.ElectricComponents buildPartial() {
				io.pravah.solar.production.SolarProduction.ElectricComponents result = new io.pravah.solar.production.SolarProduction.ElectricComponents(this);
				result.power_ = power_;
				result.voltage_ = voltage_;
				result.current_ = current_;
				result.frequency_ = frequency_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.ElectricComponents) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.ElectricComponents)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.ElectricComponents other) {
				if (other == io.pravah.solar.production.SolarProduction.ElectricComponents.getDefaultInstance()) return this;
				if (other.getPower() != 0D) {
					setPower(other.getPower());
				}
				if (other.getVoltage() != 0D) {
					setVoltage(other.getVoltage());
				}
				if (other.getCurrent() != 0D) {
					setCurrent(other.getCurrent());
				}
				if (other.getFrequency() != 0D) {
					setFrequency(other.getFrequency());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.ElectricComponents parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.ElectricComponents) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private double power_ ;
			/**
			 * <pre>
			 * Watt (W)
			 * </pre>
			 *
			 * <code>double power = 1;</code>
			 */
			public double getPower() {
				return power_;
			}
			/**
			 * <pre>
			 * Watt (W)
			 * </pre>
			 *
			 * <code>double power = 1;</code>
			 */
			public Builder setPower(double value) {

				power_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Watt (W)
			 * </pre>
			 *
			 * <code>double power = 1;</code>
			 */
			public Builder clearPower() {

				power_ = 0D;
				onChanged();
				return this;
			}

			private double voltage_ ;
			/**
			 * <pre>
			 * Volt (V)
			 * </pre>
			 *
			 * <code>double voltage = 2;</code>
			 */
			public double getVoltage() {
				return voltage_;
			}
			/**
			 * <pre>
			 * Volt (V)
			 * </pre>
			 *
			 * <code>double voltage = 2;</code>
			 */
			public Builder setVoltage(double value) {

				voltage_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Volt (V)
			 * </pre>
			 *
			 * <code>double voltage = 2;</code>
			 */
			public Builder clearVoltage() {

				voltage_ = 0D;
				onChanged();
				return this;
			}

			private double current_ ;
			/**
			 * <pre>
			 * Ampere (A)
			 * </pre>
			 *
			 * <code>double current = 3;</code>
			 */
			public double getCurrent() {
				return current_;
			}
			/**
			 * <pre>
			 * Ampere (A)
			 * </pre>
			 *
			 * <code>double current = 3;</code>
			 */
			public Builder setCurrent(double value) {

				current_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Ampere (A)
			 * </pre>
			 *
			 * <code>double current = 3;</code>
			 */
			public Builder clearCurrent() {

				current_ = 0D;
				onChanged();
				return this;
			}

			private double frequency_ ;
			/**
			 * <pre>
			 * Hertz (Hz) - Will be missing for DC.
			 * </pre>
			 *
			 * <code>double frequency = 4;</code>
			 */
			public double getFrequency() {
				return frequency_;
			}
			/**
			 * <pre>
			 * Hertz (Hz) - Will be missing for DC.
			 * </pre>
			 *
			 * <code>double frequency = 4;</code>
			 */
			public Builder setFrequency(double value) {

				frequency_ = value;
				onChanged();
				return this;
			}
			/**
			 * <pre>
			 * Hertz (Hz) - Will be missing for DC.
			 * </pre>
			 *
			 * <code>double frequency = 4;</code>
			 */
			public Builder clearFrequency() {

				frequency_ = 0D;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.ElectricComponents)
		}

		// @@protoc_insertion_point(class_scope:solar_production.ElectricComponents)
		private static final io.pravah.solar.production.SolarProduction.ElectricComponents DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.ElectricComponents();
		}

		public static io.pravah.solar.production.SolarProduction.ElectricComponents getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<ElectricComponents>
				PARSER = new com.google.protobuf.AbstractParser<ElectricComponents>() {
			@java.lang.Override
			public ElectricComponents parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new ElectricComponents(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<ElectricComponents> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<ElectricComponents> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.ElectricComponents getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface LocationOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.Location)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>double latitude = 1;</code>
		 */
		double getLatitude();

		/**
		 * <code>double longitude = 2;</code>
		 */
		double getLongitude();
	}
	/**
	 * Protobuf type {@code solar_production.Location}
	 */
	public  static final class Location extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.Location)
			LocationOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use Location.newBuilder() to construct.
		private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private Location() {
			latitude_ = 0D;
			longitude_ = 0D;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private Location(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 9: {

							latitude_ = input.readDouble();
							break;
						}
						case 17: {

							longitude_ = input.readDouble();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Location_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Location_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.Location.class, io.pravah.solar.production.SolarProduction.Location.Builder.class);
		}

		public static final int LATITUDE_FIELD_NUMBER = 1;
		private double latitude_;
		/**
		 * <code>double latitude = 1;</code>
		 */
		public double getLatitude() {
			return latitude_;
		}

		public static final int LONGITUDE_FIELD_NUMBER = 2;
		private double longitude_;
		/**
		 * <code>double longitude = 2;</code>
		 */
		public double getLongitude() {
			return longitude_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (latitude_ != 0D) {
				output.writeDouble(1, latitude_);
			}
			if (longitude_ != 0D) {
				output.writeDouble(2, longitude_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (latitude_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(1, latitude_);
			}
			if (longitude_ != 0D) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(2, longitude_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.Location)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.Location other = (io.pravah.solar.production.SolarProduction.Location) obj;

			boolean result = true;
			result = result && (
					java.lang.Double.doubleToLongBits(getLatitude())
							== java.lang.Double.doubleToLongBits(
							other.getLatitude()));
			result = result && (
					java.lang.Double.doubleToLongBits(getLongitude())
							== java.lang.Double.doubleToLongBits(
							other.getLongitude()));
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getLatitude()));
			hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
			hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
					java.lang.Double.doubleToLongBits(getLongitude()));
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Location parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.Location prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.Location}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.Location)
				io.pravah.solar.production.SolarProduction.LocationOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Location_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Location_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.Location.class, io.pravah.solar.production.SolarProduction.Location.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.Location.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				latitude_ = 0D;

				longitude_ = 0D;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Location_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Location getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.Location.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Location build() {
				io.pravah.solar.production.SolarProduction.Location result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Location buildPartial() {
				io.pravah.solar.production.SolarProduction.Location result = new io.pravah.solar.production.SolarProduction.Location(this);
				result.latitude_ = latitude_;
				result.longitude_ = longitude_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.Location) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.Location)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.Location other) {
				if (other == io.pravah.solar.production.SolarProduction.Location.getDefaultInstance()) return this;
				if (other.getLatitude() != 0D) {
					setLatitude(other.getLatitude());
				}
				if (other.getLongitude() != 0D) {
					setLongitude(other.getLongitude());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.Location parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.Location) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private double latitude_ ;
			/**
			 * <code>double latitude = 1;</code>
			 */
			public double getLatitude() {
				return latitude_;
			}
			/**
			 * <code>double latitude = 1;</code>
			 */
			public Builder setLatitude(double value) {

				latitude_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>double latitude = 1;</code>
			 */
			public Builder clearLatitude() {

				latitude_ = 0D;
				onChanged();
				return this;
			}

			private double longitude_ ;
			/**
			 * <code>double longitude = 2;</code>
			 */
			public double getLongitude() {
				return longitude_;
			}
			/**
			 * <code>double longitude = 2;</code>
			 */
			public Builder setLongitude(double value) {

				longitude_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>double longitude = 2;</code>
			 */
			public Builder clearLongitude() {

				longitude_ = 0D;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.Location)
		}

		// @@protoc_insertion_point(class_scope:solar_production.Location)
		private static final io.pravah.solar.production.SolarProduction.Location DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.Location();
		}

		public static io.pravah.solar.production.SolarProduction.Location getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<Location>
				PARSER = new com.google.protobuf.AbstractParser<Location>() {
			@java.lang.Override
			public Location parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new Location(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<Location> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<Location> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.Location getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface StatusOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.Status)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>.solar_production.Status.State state = 1;</code>
		 */
		int getStateValue();
		/**
		 * <code>.solar_production.Status.State state = 1;</code>
		 */
		io.pravah.solar.production.SolarProduction.Status.State getState();

		/**
		 * <code>string message = 2;</code>
		 */
		java.lang.String getMessage();
		/**
		 * <code>string message = 2;</code>
		 */
		com.google.protobuf.ByteString
		getMessageBytes();
	}
	/**
	 * Protobuf type {@code solar_production.Status}
	 */
	public  static final class Status extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.Status)
			StatusOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use Status.newBuilder() to construct.
		private Status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private Status() {
			state_ = 0;
			message_ = "";
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private Status(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 8: {
							int rawValue = input.readEnum();

							state_ = rawValue;
							break;
						}
						case 18: {
							java.lang.String s = input.readStringRequireUtf8();

							message_ = s;
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Status_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Status_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.Status.class, io.pravah.solar.production.SolarProduction.Status.Builder.class);
		}

		/**
		 * Protobuf enum {@code solar_production.Status.State}
		 */
		public enum State
				implements com.google.protobuf.ProtocolMessageEnum {
			/**
			 * <code>CONNECTED = 0;</code>
			 */
			CONNECTED(0),
			/**
			 * <code>DISCONNECTED = 1;</code>
			 */
			DISCONNECTED(1),
			UNRECOGNIZED(-1),
			;

			/**
			 * <code>CONNECTED = 0;</code>
			 */
			public static final int CONNECTED_VALUE = 0;
			/**
			 * <code>DISCONNECTED = 1;</code>
			 */
			public static final int DISCONNECTED_VALUE = 1;


			public final int getNumber() {
				if (this == UNRECOGNIZED) {
					throw new java.lang.IllegalArgumentException(
							"Can't get the number of an unknown enum value.");
				}
				return value;
			}

			/**
			 * @deprecated Use {@link #forNumber(int)} instead.
			 */
			@java.lang.Deprecated
			public static State valueOf(int value) {
				return forNumber(value);
			}

			public static State forNumber(int value) {
				switch (value) {
					case 0: return CONNECTED;
					case 1: return DISCONNECTED;
					default: return null;
				}
			}

			public static com.google.protobuf.Internal.EnumLiteMap<State>
			internalGetValueMap() {
				return internalValueMap;
			}
			private static final com.google.protobuf.Internal.EnumLiteMap<
					State> internalValueMap =
					new com.google.protobuf.Internal.EnumLiteMap<State>() {
						public State findValueByNumber(int number) {
							return State.forNumber(number);
						}
					};

			public final com.google.protobuf.Descriptors.EnumValueDescriptor
			getValueDescriptor() {
				return getDescriptor().getValues().get(ordinal());
			}
			public final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptorForType() {
				return getDescriptor();
			}
			public static final com.google.protobuf.Descriptors.EnumDescriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.Status.getDescriptor().getEnumTypes().get(0);
			}

			private static final State[] VALUES = values();

			public static State valueOf(
					com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
				if (desc.getType() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException(
							"EnumValueDescriptor is not for this type.");
				}
				if (desc.getIndex() == -1) {
					return UNRECOGNIZED;
				}
				return VALUES[desc.getIndex()];
			}

			private final int value;

			private State(int value) {
				this.value = value;
			}

			// @@protoc_insertion_point(enum_scope:solar_production.Status.State)
		}

		public static final int STATE_FIELD_NUMBER = 1;
		private int state_;
		/**
		 * <code>.solar_production.Status.State state = 1;</code>
		 */
		public int getStateValue() {
			return state_;
		}
		/**
		 * <code>.solar_production.Status.State state = 1;</code>
		 */
		public io.pravah.solar.production.SolarProduction.Status.State getState() {
			@SuppressWarnings("deprecation")
			io.pravah.solar.production.SolarProduction.Status.State result = io.pravah.solar.production.SolarProduction.Status.State.valueOf(state_);
			return result == null ? io.pravah.solar.production.SolarProduction.Status.State.UNRECOGNIZED : result;
		}

		public static final int MESSAGE_FIELD_NUMBER = 2;
		private volatile java.lang.Object message_;
		/**
		 * <code>string message = 2;</code>
		 */
		public java.lang.String getMessage() {
			java.lang.Object ref = message_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				message_ = s;
				return s;
			}
		}
		/**
		 * <code>string message = 2;</code>
		 */
		public com.google.protobuf.ByteString
		getMessageBytes() {
			java.lang.Object ref = message_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				message_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (state_ != io.pravah.solar.production.SolarProduction.Status.State.CONNECTED.getNumber()) {
				output.writeEnum(1, state_);
			}
			if (!getMessageBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (state_ != io.pravah.solar.production.SolarProduction.Status.State.CONNECTED.getNumber()) {
				size += com.google.protobuf.CodedOutputStream
						.computeEnumSize(1, state_);
			}
			if (!getMessageBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.Status)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.Status other = (io.pravah.solar.production.SolarProduction.Status) obj;

			boolean result = true;
			result = result && state_ == other.state_;
			result = result && getMessage()
					.equals(other.getMessage());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + STATE_FIELD_NUMBER;
			hash = (53 * hash) + state_;
			hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
			hash = (53 * hash) + getMessage().hashCode();
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Status parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.Status prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.Status}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.Status)
				io.pravah.solar.production.SolarProduction.StatusOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Status_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Status_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.Status.class, io.pravah.solar.production.SolarProduction.Status.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.Status.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				state_ = 0;

				message_ = "";

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Status_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Status getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.Status.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Status build() {
				io.pravah.solar.production.SolarProduction.Status result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Status buildPartial() {
				io.pravah.solar.production.SolarProduction.Status result = new io.pravah.solar.production.SolarProduction.Status(this);
				result.state_ = state_;
				result.message_ = message_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.Status) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.Status)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.Status other) {
				if (other == io.pravah.solar.production.SolarProduction.Status.getDefaultInstance()) return this;
				if (other.state_ != 0) {
					setStateValue(other.getStateValue());
				}
				if (!other.getMessage().isEmpty()) {
					message_ = other.message_;
					onChanged();
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.Status parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.Status) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int state_ = 0;
			/**
			 * <code>.solar_production.Status.State state = 1;</code>
			 */
			public int getStateValue() {
				return state_;
			}
			/**
			 * <code>.solar_production.Status.State state = 1;</code>
			 */
			public Builder setStateValue(int value) {
				state_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.Status.State state = 1;</code>
			 */
			public io.pravah.solar.production.SolarProduction.Status.State getState() {
				@SuppressWarnings("deprecation")
				io.pravah.solar.production.SolarProduction.Status.State result = io.pravah.solar.production.SolarProduction.Status.State.valueOf(state_);
				return result == null ? io.pravah.solar.production.SolarProduction.Status.State.UNRECOGNIZED : result;
			}
			/**
			 * <code>.solar_production.Status.State state = 1;</code>
			 */
			public Builder setState(io.pravah.solar.production.SolarProduction.Status.State value) {
				if (value == null) {
					throw new NullPointerException();
				}

				state_ = value.getNumber();
				onChanged();
				return this;
			}
			/**
			 * <code>.solar_production.Status.State state = 1;</code>
			 */
			public Builder clearState() {

				state_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object message_ = "";
			/**
			 * <code>string message = 2;</code>
			 */
			public java.lang.String getMessage() {
				java.lang.Object ref = message_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					message_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <code>string message = 2;</code>
			 */
			public com.google.protobuf.ByteString
			getMessageBytes() {
				java.lang.Object ref = message_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					message_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <code>string message = 2;</code>
			 */
			public Builder setMessage(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				message_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>string message = 2;</code>
			 */
			public Builder clearMessage() {

				message_ = getDefaultInstance().getMessage();
				onChanged();
				return this;
			}
			/**
			 * <code>string message = 2;</code>
			 */
			public Builder setMessageBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				message_ = value;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.Status)
		}

		// @@protoc_insertion_point(class_scope:solar_production.Status)
		private static final io.pravah.solar.production.SolarProduction.Status DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.Status();
		}

		public static io.pravah.solar.production.SolarProduction.Status getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<Status>
				PARSER = new com.google.protobuf.AbstractParser<Status>() {
			@java.lang.Override
			public Status parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new Status(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<Status> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<Status> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.Status getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface ErrorOrBuilder extends
			// @@protoc_insertion_point(interface_extends:solar_production.Error)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>string type = 1;</code>
		 */
		java.lang.String getType();
		/**
		 * <code>string type = 1;</code>
		 */
		com.google.protobuf.ByteString
		getTypeBytes();

		/**
		 * <code>float value = 2;</code>
		 */
		float getValue();
	}
	/**
	 * Protobuf type {@code solar_production.Error}
	 */
	public  static final class Error extends
			com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:solar_production.Error)
			ErrorOrBuilder {
		private static final long serialVersionUID = 0L;
		// Use Error.newBuilder() to construct.
		private Error(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}
		private Error() {
			type_ = "";
			value_ = 0F;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}
		private Error(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			if (extensionRegistry == null) {
				throw new java.lang.NullPointerException();
			}
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						case 10: {
							java.lang.String s = input.readStringRequireUtf8();

							type_ = s;
							break;
						}
						case 21: {

							value_ = input.readFloat();
							break;
						}
						default: {
							if (!parseUnknownFieldProto3(
									input, unknownFields, extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}
		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Error_descriptor;
		}

		@java.lang.Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Error_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							io.pravah.solar.production.SolarProduction.Error.class, io.pravah.solar.production.SolarProduction.Error.Builder.class);
		}

		public static final int TYPE_FIELD_NUMBER = 1;
		private volatile java.lang.Object type_;
		/**
		 * <code>string type = 1;</code>
		 */
		public java.lang.String getType() {
			java.lang.Object ref = type_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				type_ = s;
				return s;
			}
		}
		/**
		 * <code>string type = 1;</code>
		 */
		public com.google.protobuf.ByteString
		getTypeBytes() {
			java.lang.Object ref = type_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				type_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int VALUE_FIELD_NUMBER = 2;
		private float value_;
		/**
		 * <code>float value = 2;</code>
		 */
		public float getValue() {
			return value_;
		}

		private byte memoizedIsInitialized = -1;
		@java.lang.Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			memoizedIsInitialized = 1;
			return true;
		}

		@java.lang.Override
		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			if (!getTypeBytes().isEmpty()) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
			}
			if (value_ != 0F) {
				output.writeFloat(2, value_);
			}
			unknownFields.writeTo(output);
		}

		@java.lang.Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1) return size;

			size = 0;
			if (!getTypeBytes().isEmpty()) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
			}
			if (value_ != 0F) {
				size += com.google.protobuf.CodedOutputStream
						.computeFloatSize(2, value_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof io.pravah.solar.production.SolarProduction.Error)) {
				return super.equals(obj);
			}
			io.pravah.solar.production.SolarProduction.Error other = (io.pravah.solar.production.SolarProduction.Error) obj;

			boolean result = true;
			result = result && getType()
					.equals(other.getType());
			result = result && (
					java.lang.Float.floatToIntBits(getValue())
							== java.lang.Float.floatToIntBits(
							other.getValue()));
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			hash = (37 * hash) + TYPE_FIELD_NUMBER;
			hash = (53 * hash) + getType().hashCode();
			hash = (37 * hash) + VALUE_FIELD_NUMBER;
			hash = (53 * hash) + java.lang.Float.floatToIntBits(
					getValue());
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				java.nio.ByteBuffer data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				java.nio.ByteBuffer data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input);
		}
		public static io.pravah.solar.production.SolarProduction.Error parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3
					.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@java.lang.Override
		public Builder newBuilderForType() { return newBuilder(); }
		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}
		public static Builder newBuilder(io.pravah.solar.production.SolarProduction.Error prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}
		@java.lang.Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE
					? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}
		/**
		 * Protobuf type {@code solar_production.Error}
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:solar_production.Error)
				io.pravah.solar.production.SolarProduction.ErrorOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Error_descriptor;
			}

			@java.lang.Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Error_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								io.pravah.solar.production.SolarProduction.Error.class, io.pravah.solar.production.SolarProduction.Error.Builder.class);
			}

			// Construct using io.pravah.solar.production.SolarProduction.Error.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}
			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3
						.alwaysUseFieldBuilders) {
				}
			}
			@java.lang.Override
			public Builder clear() {
				super.clear();
				type_ = "";

				value_ = 0F;

				return this;
			}

			@java.lang.Override
			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return io.pravah.solar.production.SolarProduction.internal_static_solar_production_Error_descriptor;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Error getDefaultInstanceForType() {
				return io.pravah.solar.production.SolarProduction.Error.getDefaultInstance();
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Error build() {
				io.pravah.solar.production.SolarProduction.Error result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@java.lang.Override
			public io.pravah.solar.production.SolarProduction.Error buildPartial() {
				io.pravah.solar.production.SolarProduction.Error result = new io.pravah.solar.production.SolarProduction.Error(this);
				result.type_ = type_;
				result.value_ = value_;
				onBuilt();
				return result;
			}

			@java.lang.Override
			public Builder clone() {
				return (Builder) super.clone();
			}
			@java.lang.Override
			public Builder setField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.setField(field, value);
			}
			@java.lang.Override
			public Builder clearField(
					com.google.protobuf.Descriptors.FieldDescriptor field) {
				return (Builder) super.clearField(field);
			}
			@java.lang.Override
			public Builder clearOneof(
					com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return (Builder) super.clearOneof(oneof);
			}
			@java.lang.Override
			public Builder setRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					int index, java.lang.Object value) {
				return (Builder) super.setRepeatedField(field, index, value);
			}
			@java.lang.Override
			public Builder addRepeatedField(
					com.google.protobuf.Descriptors.FieldDescriptor field,
					java.lang.Object value) {
				return (Builder) super.addRepeatedField(field, value);
			}
			@java.lang.Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof io.pravah.solar.production.SolarProduction.Error) {
					return mergeFrom((io.pravah.solar.production.SolarProduction.Error)other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(io.pravah.solar.production.SolarProduction.Error other) {
				if (other == io.pravah.solar.production.SolarProduction.Error.getDefaultInstance()) return this;
				if (!other.getType().isEmpty()) {
					type_ = other.type_;
					onChanged();
				}
				if (other.getValue() != 0F) {
					setValue(other.getValue());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@java.lang.Override
			public final boolean isInitialized() {
				return true;
			}

			@java.lang.Override
			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				io.pravah.solar.production.SolarProduction.Error parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (io.pravah.solar.production.SolarProduction.Error) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private java.lang.Object type_ = "";
			/**
			 * <code>string type = 1;</code>
			 */
			public java.lang.String getType() {
				java.lang.Object ref = type_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					type_ = s;
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}
			/**
			 * <code>string type = 1;</code>
			 */
			public com.google.protobuf.ByteString
			getTypeBytes() {
				java.lang.Object ref = type_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					type_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}
			/**
			 * <code>string type = 1;</code>
			 */
			public Builder setType(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}

				type_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>string type = 1;</code>
			 */
			public Builder clearType() {

				type_ = getDefaultInstance().getType();
				onChanged();
				return this;
			}
			/**
			 * <code>string type = 1;</code>
			 */
			public Builder setTypeBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				checkByteStringIsUtf8(value);

				type_ = value;
				onChanged();
				return this;
			}

			private float value_ ;
			/**
			 * <code>float value = 2;</code>
			 */
			public float getValue() {
				return value_;
			}
			/**
			 * <code>float value = 2;</code>
			 */
			public Builder setValue(float value) {

				value_ = value;
				onChanged();
				return this;
			}
			/**
			 * <code>float value = 2;</code>
			 */
			public Builder clearValue() {

				value_ = 0F;
				onChanged();
				return this;
			}
			@java.lang.Override
			public final Builder setUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFieldsProto3(unknownFields);
			}

			@java.lang.Override
			public final Builder mergeUnknownFields(
					final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}


			// @@protoc_insertion_point(builder_scope:solar_production.Error)
		}

		// @@protoc_insertion_point(class_scope:solar_production.Error)
		private static final io.pravah.solar.production.SolarProduction.Error DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new io.pravah.solar.production.SolarProduction.Error();
		}

		public static io.pravah.solar.production.SolarProduction.Error getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		private static final com.google.protobuf.Parser<Error>
				PARSER = new com.google.protobuf.AbstractParser<Error>() {
			@java.lang.Override
			public Error parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new Error(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<Error> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<Error> getParserForType() {
			return PARSER;
		}

		@java.lang.Override
		public io.pravah.solar.production.SolarProduction.Error getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_FeedMessage_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_FeedMessage_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_FeedHeader_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_FeedHeader_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_FeedStation_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_FeedStation_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_Inverter_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_Inverter_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_PowerGenerationParameters_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_PowerGenerationParameters_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_Info_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_Info_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_PhaseComponents_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_PhaseComponents_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_SolarPanelGroup_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_SolarPanelGroup_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_ElectricComponents_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_ElectricComponents_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_Location_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_Location_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_Status_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_Status_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_solar_production_Error_descriptor;
	private static final
	com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
			internal_static_solar_production_Error_fieldAccessorTable;

	public static com.google.protobuf.Descriptors.FileDescriptor
	getDescriptor() {
		return descriptor;
	}
	private static  com.google.protobuf.Descriptors.FileDescriptor
			descriptor;
	static {
		java.lang.String[] descriptorData = {
				"\n\026solar-production.proto\022\020solar_producti" +
						"on\"l\n\013FeedMessage\022,\n\006header\030\001 \001(\0132\034.sola" +
						"r_production.FeedHeader\022/\n\010stations\030\002 \003(" +
						"\0132\035.solar_production.FeedStation\"\253\001\n\nFee" +
						"dHeader\022\017\n\007version\030\001 \001(\t\022C\n\016incrementali" +
						"ty\030\002 \001(\0162+.solar_production.FeedHeader.I" +
						"ncrementality\022\021\n\ttimestamp\030\003 \001(\004\"4\n\016Incr" +
						"ementality\022\020\n\014FULL_DATASET\020\000\022\020\n\014DIFFEREN" +
						"TIAL\020\001\"\376\001\n\013FeedStation\022\n\n\002id\030\001 \001(\t\022(\n\006st" +
						"atus\030\002 \001(\0132\030.solar_production.Status\022N\n\031" +
						"powerGenerationParameters\030\003 \001(\0132+.solar_" +
						"production.PowerGenerationParameters\022$\n\004" +
						"info\030\004 \001(\0132\026.solar_production.Info\0220\n\014in" +
						"verterList\030\005 \003(\0132\032.solar_production.Inve" +
						"rter\022\021\n\ttimestamp\030\006 \001(\004\"\301\002\n\010Inverter\022\n\n\002" +
						"id\030\001 \001(\t\022(\n\006status\030\002 \001(\0132\030.solar_product" +
						"ion.Status\022:\n\017phaseComponents\030\003 \003(\0132!.so" +
						"lar_production.PhaseComponents\022:\n\017solarP" +
						"anelGroup\030\004 \003(\0132!.solar_production.Solar" +
						"PanelGroup\022N\n\031powerGenerationParameters\030" +
						"\005 \001(\0132+.solar_production.PowerGeneration" +
						"Parameters\022$\n\004info\030\006 \001(\0132\026.solar_product" +
						"ion.Info\022\021\n\ttimestamp\030\007 \001(\004\"\227\001\n\031PowerGen" +
						"erationParameters\022\032\n\022currentPowerOutput\030" +
						"\001 \001(\002\022\033\n\023powerGeneratedToday\030\002 \001(\002\022\023\n\013ir" +
						"radiation\030\003 \001(\002\022\021\n\twindspeed\030\004 \001(\002\022\031\n\021mo" +
						"duleTemperature\030\005 \001(\002\"Y\n\004Info\022\025\n\rpowerCa" +
						"pacity\030\001 \001(\001\022\014\n\004name\030\002 \001(\t\022,\n\010location\030\003" +
						" \001(\0132\032.solar_production.Location\"\251\001\n\017Pha" +
						"seComponents\022@\n\022electricComponents\030\001 \001(\013" +
						"2$.solar_production.ElectricComponents\0226" +
						"\n\005phase\030\002 \001(\0162\'.solar_production.PhaseCo" +
						"mponents.Phase\"\034\n\005Phase\022\005\n\001B\020\000\022\005\n\001R\020\001\022\005\n" +
						"\001Y\020\002\"\207\001\n\017SolarPanelGroup\022@\n\022electricComp" +
						"onents\030\001 \001(\0132$.solar_production.Electric" +
						"Components\022\022\n\npanelCount\030\002 \001(\r\022\036\n\026averag" +
						"eGroupModuleTemp\030\003 \001(\002\"X\n\022ElectricCompon" +
						"ents\022\r\n\005power\030\001 \001(\001\022\017\n\007voltage\030\002 \001(\001\022\017\n\007" +
						"current\030\003 \001(\001\022\021\n\tfrequency\030\004 \001(\001\"/\n\010Loca" +
						"tion\022\020\n\010latitude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(" +
						"\001\"r\n\006Status\022-\n\005state\030\001 \001(\0162\036.solar_produ" +
						"ction.Status.State\022\017\n\007message\030\002 \001(\t\"(\n\005S" +
						"tate\022\r\n\tCONNECTED\020\000\022\020\n\014DISCONNECTED\020\001\"$\n" +
						"\005Error\022\014\n\004type\030\001 \001(\t\022\r\n\005value\030\002 \001(\002B\034\n\032i" +
						"o.pravah.solar.productionb\006proto3"
		};
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
				new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
					public com.google.protobuf.ExtensionRegistry assignDescriptors(
							com.google.protobuf.Descriptors.FileDescriptor root) {
						descriptor = root;
						return null;
					}
				};
		com.google.protobuf.Descriptors.FileDescriptor
				.internalBuildGeneratedFileFrom(descriptorData,
						new com.google.protobuf.Descriptors.FileDescriptor[] {
						}, assigner);
		internal_static_solar_production_FeedMessage_descriptor =
				getDescriptor().getMessageTypes().get(0);
		internal_static_solar_production_FeedMessage_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_FeedMessage_descriptor,
				new java.lang.String[] { "Header", "Stations", });
		internal_static_solar_production_FeedHeader_descriptor =
				getDescriptor().getMessageTypes().get(1);
		internal_static_solar_production_FeedHeader_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_FeedHeader_descriptor,
				new java.lang.String[] { "Version", "Incrementality", "Timestamp", });
		internal_static_solar_production_FeedStation_descriptor =
				getDescriptor().getMessageTypes().get(2);
		internal_static_solar_production_FeedStation_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_FeedStation_descriptor,
				new java.lang.String[] { "Id", "Status", "PowerGenerationParameters", "Info", "InverterList", "Timestamp", });
		internal_static_solar_production_Inverter_descriptor =
				getDescriptor().getMessageTypes().get(3);
		internal_static_solar_production_Inverter_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_Inverter_descriptor,
				new java.lang.String[] { "Id", "Status", "PhaseComponents", "SolarPanelGroup", "PowerGenerationParameters", "Info", "Timestamp", });
		internal_static_solar_production_PowerGenerationParameters_descriptor =
				getDescriptor().getMessageTypes().get(4);
		internal_static_solar_production_PowerGenerationParameters_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_PowerGenerationParameters_descriptor,
				new java.lang.String[] { "CurrentPowerOutput", "PowerGeneratedToday", "Irradiation", "Windspeed", "ModuleTemperature", });
		internal_static_solar_production_Info_descriptor =
				getDescriptor().getMessageTypes().get(5);
		internal_static_solar_production_Info_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_Info_descriptor,
				new java.lang.String[] { "PowerCapacity", "Name", "Location", });
		internal_static_solar_production_PhaseComponents_descriptor =
				getDescriptor().getMessageTypes().get(6);
		internal_static_solar_production_PhaseComponents_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_PhaseComponents_descriptor,
				new java.lang.String[] { "ElectricComponents", "Phase", });
		internal_static_solar_production_SolarPanelGroup_descriptor =
				getDescriptor().getMessageTypes().get(7);
		internal_static_solar_production_SolarPanelGroup_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_SolarPanelGroup_descriptor,
				new java.lang.String[] { "ElectricComponents", "PanelCount", "AverageGroupModuleTemp", });
		internal_static_solar_production_ElectricComponents_descriptor =
				getDescriptor().getMessageTypes().get(8);
		internal_static_solar_production_ElectricComponents_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_ElectricComponents_descriptor,
				new java.lang.String[] { "Power", "Voltage", "Current", "Frequency", });
		internal_static_solar_production_Location_descriptor =
				getDescriptor().getMessageTypes().get(9);
		internal_static_solar_production_Location_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_Location_descriptor,
				new java.lang.String[] { "Latitude", "Longitude", });
		internal_static_solar_production_Status_descriptor =
				getDescriptor().getMessageTypes().get(10);
		internal_static_solar_production_Status_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_Status_descriptor,
				new java.lang.String[] { "State", "Message", });
		internal_static_solar_production_Error_descriptor =
				getDescriptor().getMessageTypes().get(11);
		internal_static_solar_production_Error_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_solar_production_Error_descriptor,
				new java.lang.String[] { "Type", "Value", });
	}

	// @@protoc_insertion_point(outer_class_scope)
}
